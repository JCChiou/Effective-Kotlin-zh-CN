{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["1","10","11","12","13","14","15","16","17","18","19","2","20","21","22","23","24","25","26","27","28","29","3","30","31","32","33","34","35","36","37","38","39","4","40","41","42","43","44","45","46","47","48","49","5","50","51","52","6","7","8","9","[","[x]","]","abstract","action","against","algorithm","api","argument","array","avoid","behavior","between","big","bundl","chang","chapter","cheap","class","clear","close","cn","code","collect","common","compar","complex","composit","consid","consist","constructor","contract","convent","creation","critic","custom","data","defin","deleg","design","differ","document","dsl","each","effect","effici","element","elimin","equal","error","essenti","expect","explicitli","expos","extens","extern","extract","factori","failur","function","gener","good","handl","hash","hierarchi","implement","infer","inherit","inlin","instead","interfac","introduct","item","knowledg","kotlin","lack","level","limit","make","mean","member","minim","modifi","modul","more","mutabl","name","non","null","number","object","obsolet","on","oper","option","over","paramet","part","pass","pattern","perform","platform","possibl","prefer","primari","primit","process","properli","properti","protect","readabl","receiv","refer","referenc","repeat","repres","resourc","respect","result","return","reus","reusabl","safeti","scope","sequenc","shadow","singl","soon","specifi","stabil","standard","state","step","tag","term","test","type","unit","unnecessari","us","variabl","varianc","visibl","wrap","write","written","zh","中文翻译","在线阅读地址","当前进度：英文原文搬运中"],"Part 1 Good code/Chapter 1 Safety/Introduction.html":["amaz","applic","argument","basket.","best","better,","both","bought","busi","business,","c++?","chapter","chapter,","check","code","collect","concis","convinc","crash","crashes,","decid","design","develop","don’t","elimin","error","errors.","errors.”","experi","featur","features.","fewer","found","gener","have","hour","import","instead","introduct","item","java,","javascript","kotlin","kotlin.","language,","less","live","make","need","out","out,","potenti","practic","produc","product","project","promot","prone","properly.","provid","purpos","realli","safe","safe.","safeti","safety,","see","signific","spent","still","support","talk","truli","upset","us","us,","user","value.","websit","we’ll","“whi"],"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":["!=","\"$it","\"$name","\")","\"aaa\")","\"bill\"","\"blanc\"))","\"braun\"","\"fabio\"","\"hansen\"))","\"kirill\"","\"maja\"","\"marcin\"","\"markiewicz\")","\"moskała\"","\"moskała\")","\"márton\"","\"zzz\"","$new\")","$old","$surname\"","(balanc","(bi","(elem","(for","(fullnam","(fullname2","(getter","(i","(like","(list","(part","(t)","(which",")","):","+","+=","//","//...","0","0.0","1","1..1000)","10","1000","1000,","16:","2","2,","20","3)","3,","37:","3:","41:","42","4]","911","=",">","@throws(insufficientfunds::class)","[1,","[]","[aaa","[fabio,","[fabio]","[zzz","_,","aaa,","abov","abstract","accessor","accidental.","account","account.","achiev","active:","actual","actualelement:","add","addit","advantag","advantages:","again.","alias","all.","allow","alreadi","also,","although","ambiguity:","announc","anoth","any()","anymor","api.","appli","approach","ar","are:","arraylist()","arraylist,","arrays.arraylist","ask","assign","assumpt","attent","balanc","balance:","bank","bankaccount","baselin","be.","because:","behav","behavior.","behavior:","behind","below","below.","better","between","bigger","biggest","bill]”","blanc,","book.","boolean","both","braun","break","bundl","buzz","cach","calculate()","calculate():","calculating...","call","case","cast","casted:","casting.","chang","change).","change,","change.","changed,","changed:","changing.","chapter","characterist","check","check,","choic","class","classes,","classif","classifi","clear.","close","code","code.","code:","collect","collection,","collection.","collection:","collections.","combin","come","complex","compos","comprehend.","concret","conflict","conflict.","cons.","consequences.","consid","consist","construct","constructor","contract","contract,","contract.","control","copi","copy.","copying.","core","coroutines,","coroutinescop","correct","correspond","cost.","couldn’t","creat","created.","critic","custom","danger","data","data.","david","deal","debug","decid","deep","default","default.","defens","defin","definition.","delay(10)","deleg","delegate,","delegate.","delegates.observable(listof())","depend","deposit(depositamount:","depositamount","describ","design","designed.","detail","develop","diagram","differ","discuss","doesn’t","don’t","doubl","double)","down","drawback","dure","each","easi","easier","edg","effici","efficiency)","efficient.","eleg","element","elements:","encapsul","error","errors.","especi","even","exampl","example:","except","exponenti","expos","extend","fact","fals","false”","familiar","faster","featur","feel","file,","filter","final","final.","find","first","fizz","flexibl","following:","found","freedom","freedom.","fullnam","fullname(\"aaa\",","fullname2:","fullname:","fun","function","function,","functions,","gener","get()","get():","getter","getter,","getter.","give","go","good","grow","guarante","guaranteed.","hand","hand,","hansen]","hard","hard,","harder","hash","hashcode.","haskell.","have","have,","help.","helpful:","here","hidden","hierarchi","history.","hold","hood","hood,","however,","idea","immut","immutable,","immutable.","implement","implementation.","import","important.","imposs","incorrect","inlin","insecur","instanc","instance,","instead","instead,","int","int.","interfac","interface,","interface.","interfaces.","intern","involved,","is.","issu","it,","it.","item","iter","iterable,","iterable.filt","iterable.map","iterable.map(","it’","java","java.lang.unsupportedoperationexcept","java.util.abstractlist.add(abstractlist.java:108)","java.util.abstractlist.add(abstractlist.java:148)","jordan","jvm","keep","key","kind","known","kotlin","kotlin,","kotlin.","kotlin/jvm,","lack","languag","language,","languages.","last","later","launch","lead","leak","learn","left","less","let’","level","life","limit","list","list,","list.","list.add(4)","list.add(transformation(elem))","list.tomutablelist","list.tomutablelist()","list1","list1.add(1)","list1.plusassign(1)","list1:","list2","list2.plus(1)","list2:","list3","list:","listof","listof()","listof(1,","listof(1,2,3)","loadal","loadall():","local","locat","lock","log","long","look","lose","lost.","lot","main","main()","mainstream","maintained.","maja","make","manag","mani","map","maps,","marcin","materi","mean","method","minu","model","modif","modifi","modification.","modified,","modify.","modify:","modul","moment","money","more","more,","moskała","much","multipl","multithread","multithreading,","multithreading.","mutability,","mutability.","mutabl","mutable,","mutable.","mutablecollection,","mutableiterable,","mutablelist","mutablelist)","mutablelist.add(4)","mutablelistof()","mutablelistof(1,2,3)","mutablemap","mutablemapof()","mutableset,","mutableus","mutableuser()","mutat","mutates,","mutation.","márton","name","name).","name:","name?.let","names)","names.add(fullname(\"david\",","names.add(fullname(\"jordan\",","names.add(person)","names:","necessarili","need","never","new","next","non","noth","notic","notifi","now.","null)","num","number","number,","numer","object","object,","object:","objects,","objects.","observ","occur:","offer","old,","on","onc","one,","one.","ones.","only,","only.","oper","operation.","operations,","operations.","opposit","optim","option,","ourselves,","outside.","over","overal","overrid","parallel","part","particular","perfect","perform","person","person.nam","place","place,","place.","platform","plu","point","point,","points.","position.","possibl","possible,","potenti","predictable.","prefer","preferred.","prepar","present","previou","primari","print(\"calculating...","print(buzz)","print(fizz)","print(list)","print(list.size)","print(names)","print(num)","print(person","print(s)","print(user)","print(userrepository.loadall())","println(\"nam","println(fullname)","println(fullname.length)","println(fullname2.length)","privat","private:","pro","problem","problemat","process","produc","program","program.","programs.everi","project","projects,","projects.","proper","properti","properties,","properties.","property,","property.","property:","pure","r","rare","read","real","realli","reason","recommend","refer","relationship","rememb","replac","repres","requir","rescue.","respect","result","return","right","risk","rule","rules.","safe","safer","safeti","same","same.","satisfi","second","see","see,","seen","separ","set","set,","set.","setter","setter).","setter.","setters)","setting:","share","short,","should,","shouldn’t","show","side,","similar","similarly,","simpl","simplifi","singl","situat","slightli","smart","snippet","snippet⁶.","solut","someth","sometim","sort","sorted.","sortedset","sourc","sparingli","special","specif","specifi","specific.","standard","state","state,","state.","state:","states.","stay","stdlib.","still","storedus","storedusers:","storedusers[4]","string","string)","string,","string?","such","summari","supertype:","support","surely,","surnam","surname)","surname:","surname=moskała)","surpris","suspend","sword.","synchron","synchronization,","synchronized(lock)","systems.","system”","tabl","table,","take","teams.","techniqu","tediou","test","test.","thank","that,","that.","that’","them,","them.","therefore,","this!","this)","those","though","though,","thread","thread.sleep(10)","thread.sleep(1000)","thread.sleep(5000)","time","time,","togeth","tool","top","track","trait,","transformation:","translat","treeset()","tri","true","truli","trust","two","type","typic","under","underli","understand","understood","understood,","unexpect","univers","unlik","unnecessari","up","upcast","us","user","user(","user(\"maja\",","user(name,","user(name=maja,","user(v","user.copy()","user.copy(surnam","user.withsurname(\"moskała\")","user:","userhold","userrepositori","userrepository()","userrepository.loadall()","val","valu","value)","value.","var","var.","var:","variable).","veri","way","way.","ways:","well","well,","well.","we’v","whenev","wise","withdraw(withdrawamount:","withsurnam","withsurname(surname:","won’t","work","work.","works:","world","worst","write","year","{","{4=kirill}","}","“hack","“main”"],"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":["!=","\"cold\"","\"hot\"","\"mild\"","$i","$user\")","%","((i,","(2..100).tolist()","(degre","(except","(hasvalue)","(i","(most","(numbers.isnotempty())","(true)","+","...",".filter","//","0","1","10","10,","11,","12]","13,","17,","19,","2","2).","2.","23,","29,","29]","3","3,","31,","37,","4","41,","43,","47,","5,","53,","59,","6,","61,","67,","7,","71,","73,","79,","8,","83,","89,","9,","97]","=",">","[2,","a,","abov","abuse,","access","add","algorithm","also,","although","alway","analyz","anoth","anymore.","applic","assign","avoid","awar","b","b)","bad","behavior.","better","braces,","break.","builder.","buzz","buzz,","by:","c","c)","captur","catch","challeng","chang","closest","code,","color.blu","color.r","color.yellow","color:","common","complete.","complication.","comput","conceptu","concret","consecut","control","coroutines,","correctli","counterparts.","creat","curli","danger.","dangerous.","deal","declar","defin","defined.","degre","describ","description:","destructur","develop","developer.","divis","done","drop","easier","element","element.","elvi","end","eratosthen","exampl","example,","example:","examples,","exercis","explain","express","expressions),","expressions:","extract","fact","filter","filters.","finally,","find","first","fizz","fizz()","forc","fun","function","functions.","gener","generatesequence(2)","getvalue()","group","happen.","harder","help","here","however,","if(hasvalue)","if,","immut","implement","import","infinit","initi","insid","instance,","instead","int","int)","is,","is:","it,","it.","item","iter","iteration,","keep","kotlin","kotlin,","lambda","lambdas.","last","lazili","lead","less","let’","like:","limit","list","local","look","loop","loop,","loop.","lot","manage.","mani","minim","modifi","more","multipl","mutabl","mutablelistof()","narrow","narrowest","nearli","need","needless","next","nicer","now","number","number.","numbers,","numbers.","numbers.drop(1)","numbers.filt","numbers.first()","numbers:","object","on","onc","one.","oper","out","outer","outsid","over","overus","person","point.","possibl","possible,","possible.","potenti","prefer","prevent","prime","prime.","prime:","primes.add(prime)","primes:","print(\"us","print(a","print(primes)","print(primes.take(10).tolist())","problem","produc","program","programming.","properly.","properti","properties,","read","realli","reason","reasoning.","reasons,","refer","region","remain","remov","rest","result","result.","rule","same","save","scope","scope,","scope.","second","see","sequenc","sequence.","set","siev","similar","similarly,","simpl","simple:","simpler","situat","smaller","solut","someth","start","state,","step,","still","stop","string","structur","such","summari","support","syntax","take","teach","terribl","therefor","think","third","this:","those","tighten","track","tri","trouble.","understand","unintent","up","updateweather(degrees:","us","us:","user","user()","user)","user:","users.indices)","users.withindex())","users[i]","val","valu","var","variabl","variable:","variables.","variable’","veri","visible.","want","way,","we’r","when,","whether","whole","wide","wider","with,","work","write,","yield","yield(prime)","yourself,","{","}","“optimized”","“optimize”"],"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":["!","!!","${text.length}\")","(@nonnul","(@nullabl","(@nullable,","(@nullable,@checkfornul","(and","(npe),","...","//","//***","//...","3","305","305’","=","@checkfornull,","@nonnul","@notnul","@nullabl","@parametersarenonnullbydefault","@possiblynul","absolut","adjust","all.","alternatively,","although","alway","amazing.","android","android.support.annotations)","androidx.annot","annot","annotation.","annotations?","anoth","anyon","api","approach","around","assert","assign","assum","be","becam","behav","behavior","between","bigger","both","by:","c","call","case,","cases,","caus","chang","change.","choos","citizen.","class","clear","code","code.","com.android.annot","come","comment,","commun","complet","complex","complicated:","connect","conscienti","constructors,","contract.","control","danger","dangerous,","decid","declar","default","default,","definit","denotable,","describ","design","develop","developers).","differ","disaster.","doesn’t","down","easi","eclips","edu.umd.cs.findbugs.annotations)","elements.","elimin","end","entirely.","error","even","everyth","example:","except","exclam","expect","expect:","explicitli","expos","expression.","fact,","few","fields.","filter","filternotnull.","find.","findbug","first","friendly.","fun","function","further.","future.","gener","get","getuser()","getusername()","getusername():","getusers()","getvalu","getvalue()","givename()","good","happens.","hasn’t","help","however,","idea","imagin","import","includ","infer","inform","instance,","instead","instead,","instead?","intellij","interfac","interface:","interoper","interpret","introduc","io.reactivex.annotations)","it!!.filternotnull()","item","it’","java","java,","java.","javaclass","javaclass().valu","javatest","javax","javax.annotation)","jetbrain","jsr","kind","know","known","koltin","kotlin","kotlin,","kotlin.","kotlin?","kotlin’","languag","language.","later","length","librari","line","list","list>","lombok","lombok)","made","main()","make","mani","map","mark","mean","mechan","method","middl","more","much","name","name,","need","non","not.","notat","note","notnul","now,","npe","null","null,","null.","null;","nullability.","nullabl","nullable.","nulls:","object.","on","org.eclipse.jdt.annotation)","org.jetbrains.annotations)","org.jetbrains.annotations.notnull;","over","overrid","part","place","platform","platformtyp","platformtype()","pointer","possibl","possible,","possible.","preciou","print(\"us","println(value.length)","problem","problem.","problematic,","problematic:","propag","propagate.","properties,","property,","protect","public","rare","reactivex","real","reason","reasons,","recip","recommend","rememb","repo","repo.getusername()","repo.us","repo:","repoimpl()","repoimpl:","rest","result","return","runtim","safe","safely,","safeti","same","secur","set.","similar","singl","site,","site:","situat","solid","someon","someth","soon","sooner","special","specifi","statedtyp","statedtype()","step","still","string","string!.","string.","string?","string?.","such","suggest","summari","support","supported,","system","take","text:","thank","then.","there’","thing","think","those","though","though,","throw","thrown","time","treat","trust","type","type.","types,","types.","understand","unknown","unsaf","unsafely,","up","us","us.","user","user!","user1","user2","user2:","user3","user3:","user?","userrepo","userrepo()","userrepo().groupedus","userrepo().groupedusers!!.map","userrepo().us","userrepo().users!!.filternotnull()","users:","val","valu","value:","variabl","veri","want","warning:","well","well.","wherev","whole","why,","without","won’t","write","wrong.","wrongli","{","}"],"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":["(item","(limit","(so","//","1","10","14:","2","3","4","=","abov","accident.","addition","all,","alway","angri","anim","animal()","animal:","anoth","anyway:","api","api).","api,","assign","car","carfactori","cases,","caught","chang","class","clear).","comfort","compar","control","danger","dangerous.","decid","default","default.","default_car","default_car:","defin","don’t","easili","error:","especi","evolves.","exact","example.","except","explicit","expos","exposit","extern","factori","factories,","factories:","featur","feature.","fiat126p()","fiat126p.","first","fixed.","follow","fun","gener","good.","hide","import","infer","inferred,","inferred:","inform","interfac","interface:","introduc","it.","item","java","jvm","know","kotlin","kotlin).","kotlin’","later","let’","librari","look","made","main()","make","mismatch","module.","need","noth","now,","omit","on","open","outsid","part","popular","probabl","problem","problem.","produc","produce()","produce():","project","readability,","realli","rememb","repres","restrict","return","right","rule","safety,","sake","see","side,","similarly,","solved:","someon","soon","specifi","specified:","such","summari","superclass","sure","that,","though,","type","type,","types.","us","users.","val","var","variabl","visibl","well","well,","world.","yourself,","zebra()","zebra:","{","}"],"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":["!=","\"","\"becaus","\"cannot","\"fail","$n","(assum","(n","(though","):","+","/*...*/","//","//...","0\"","0)","1):","10","5","5:","=","==",">=","?:","@test","`stack","abov","achieve.","action","actual","add","address","address\")","advantag","advantages:","again,","all,","allow","although","alway","anoth","anymor","anymore.","anyway.","appli","applic","appropri","are:","argument","arguments,","arguments.","ask","assert","assert(ret.s","assert.","assertequals(10,","assum","basic","befor","begin","beginning,","behavior","behavior.","below","better","block","blocks.","bodies).","boolean):","both","break","calcul","call","call.","call:","called.","capabl","case","case,","cases,","cases.","cast","casting,","chang","changedress(person:","characterist","check","check(isinitialized)","check(isopen)","check.","checking.","checknotnull(token)","checknotnull.","checks,","class","clear","clear.","closer","clusters,","code","code.","common","compil","concret","condit","conditions.","consequences,","contract","correct","correct.","correctli","correctly.","correctness.","current","custom","danger","decid","declar","default","default,","defin","degre","desir","differ","direct","document","documentation,","documentation.","doesn’t","dress","dress)","dress.","dress:","ea","early,","easili","edg","effect","element","elements.","elements`()","elvi","email","email,","email:","empty.","enabl","error","error,","error.","error:","especi","evalu","even","everyon","everyth","exact","exampl","examples:","except","exception.","exceptions.","execution.","expect","expectations,","expected.","experi","express","fact","factori","factorial(n:","fail","fails.","far","feel","few","final,","find","first","first.","flexibl","four","free","fun","function","function).","function,","function.","function:","functions.","functions:","gener","getuserinfo():","give","handl","happen","hard","harder","have","help","here","hesit","highli","hope","idiomat","ignored,","illegalargumentexcept","illegalstateexcept","immedi","implement","implementation,","implementation.","impli","import","in.","includ","incorrect,","incorrectli","initi","inlin","instance,","instead","instead.","int","int):","integer.","it.","it:","item","java.","jvm","keep","kind","know","kotlin","kotlin/jvm,","lambda","later","later.","lazi","lead","less","let’","list","local,","log","log(\"email","long","look","made","main","mainli","make","manage4.","mani","match","mayb","mean","mechan","mechanisms:","messag","message,","message:","met.","miss","mistak","mistakes.","mode","mode.","modif","modifi","more","much","naiv","nearli","necess","need","next():","not.","notic","notice.","null)","null,","null:","nullability,","nullabl","num)","number","number,","object","on","onc","one:","open.","oper","opposit","option.","other","outfit","part","person(v","person)","person,","person.email","person.outfit","person’","place","point","pop","pop(num:","popular","posit","possible,","possible.","potenti","practic","predic","probabl","problem","problem.","production.","programm","propag","properli","properti","protect","public","python.","read","readabl","real","reality:","realli","refactored.","reliable.","rememb","requir","require(isvalidemail(user.email))","require(n","require(num","require(person.email","require(person.outfit","require(points.isnotempty())","require(value)","require(value:","require,","require.","required.","requirement.\"","requirenotnul","requirenotnull(person.email)","requirenotnull(user.email)","result","ret","ret.size)","return","returns()","returns,","right","right.","run","run,","sake","same","satisfi","satisfied,","satisfied.","satisfied:","self","send","sendemail(person:","sendemail(user:","sent,","seriou","side.","signific","similarli","singl","situat","size","smaller","smart","so.","solut","someon","someth","soon","speak(text:","special","specifi","stability.","stable.","stack","stack(20)","stack.pop(10)","stacktest","standard","start","started.","state","state,","state.","still","stop","stopped:","strang","string","string)","string?)","structur","such","summari","suspect","system.","t","take","talk","test","testing.","tests.","text:","thank","that,","them.","thing","those","throw","throw.","thrown","time,","to:","treat","true","true,","true.","trust","type","uncommon","unexpect","unit","univers","unless","until","us","used,","user","user,","userinfo","using:","val","validateemail(email)","validateemail(email:","validateemail(person.email)","valu","variabl","variables,","variables.","veri","visibl","visible.","want","way","well","whole","won’t","words,","work","wrap","write","{","}","“unpack”"],"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":["(incorrectsign)","//...","5:","6","6:","api","argument","arraylist.get(int).","arrays.","ask","assert","avoid","be","check","class.","client","collect","common","concurr","concurrentmodificationexcept","contract","correct","cover","custom","declar","defin","describ","detected.","develop","easier","element","elements.","error","errors,","especi","establish","except","exist.","expect","file","format,","format:","fun","function","here","illegalargumentexcept","illegalstateexcept","implement","index","indexoutofboundsexcept","indic","indicate.","inlin","instanc","instance,","instead","item","iter","json","jsonparsingexcept","jsonparsingexception()","kind","known","kotlin","learn","librari","list","make","method","modif","more","need","next","nosuchelementexcept","object.","on","out","own.","paramet","pars","possible,","prefer","present","prohibit","provid","range.","reason","request","requir","require,","result","return","reus","reused.","situat","situation.","specifi","standard","state.","string.readobject():","such","suitabl","support","supported,","t","throw","thrown","understand.","unexpect","unsupportedoperationexcept","us","use:","valu","well","whenev","{","}"],"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":["(incorrectsign)","(that","//...","1","7","7:",":","=",">","?:","?:.","addit","ag","api.","application.","are:","ask","between","bloch).","block","both","both:","call","case","catch","certain","choos","circumstances,","class","class,","client","code","code.","common","compar","compil","conditions(effect","connect","criteria,","data","design","desir","develop","differ","documented.","doubts,","easier","easili","effici","efficient,","element","elvi","encourag","error","error.","even","exampl","examples:","except","exception()","expect","expected,","expected.","explicit","explicit,","explicit.","explicitli","expression:","failur","failure(jsonparsingexception())","failure(v","failure)","failure,","fast","featur","few","first","flow","forc","fun","function","gener","getordefault,","getornul","getornull,","given","good","hand,","handl","handled,","happens,","harder","here","hold","idiomat","implement","import","incent","incorrect,","indexoutofboundsexception.","indic","inform","information.","inhibit","inlin","insid","internet","interrupt","item","java","joshua","jsonparsingexcept","jvm","know","kotlin","lack","latter","less","list","littl","main","make","malformat","match","mechan","miss","miss.","more","name","need","need.","null","null,","null.","nullabl","object","occur","on","oper","operator:","optim","options,","otherwis","otherwise.","out","pars","pass","perfect","perform.","personresult","personresult.value.ag","place","position,","possibl","practic","prefer","problem","produc","programm","propag","properly.","range,","readabl","realli","reason","rememb","replac","result","result()","result,","result.","result:","return","rule","safe","safely,","safeti","same","seal","server,","situat","situation.","situations:","sometimes,","special","standard","stop","string.readobject():","string.readobjectornull():","success","success(result)","success(v","such","support","suppos","t)","t?","take","tests.","text","text,","them.","there,","those","throw","throwable)","throwable:","time,","treat","tri","two","two.","type","unchecked.","unexpect","union","us","user","usertext.readobject()","usertext.readobjectornull()?.ag","val","valu","value,","variant","varieti","visibl","way","way.","ways.","well","we’ll","when(personresult)","wherea","whole","won’t","{","}"],"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":["!!","!!,","!!.","!!:","!=","\"unnamed\"","${name.touppercase()}\")","(!name.isnullorblank())","(!news.isnullorempty())","(item","(printer","(programm",".getboolean(from_notification_arg)","//","21:","3","4","5:","7:","8","8:","=",">","?.,","?:","@beforeeach","@test","abov","abus","accept","activity()","activity,","actual","ad","addit","against","agre","all.","allow","alway","analyz","android","annoy","api","applic","approach","appropriately.","approv","are:","arg(doctor_id_arg)","arg(from_notification_arg)","argument","argument.","arguments9.","ask","assert","associ","assum","avoid","b,","b:","back","be","befor","before,","behind","best","better","between","biggest","blanket","block","book,","boolean","boolean)","boolean.","both","braun","bundle?)","c,","c:","call","called.","can:","careful”","case","cases,","cast","casting,","casting:","checkand","checknotnull(context)","checknotnull,","class","clear","client.","clutter","code","code.","coincidence.","collect","collection,","collection.","collection?","comfort","common","community.","compil","complain","componentdidmount","conceptu","conflict,","consid","context","contract","control","controller!!.dosomething()","controller.dosomething()","controller:","correct","correctli","correctly.","cost","creation,","creation.","current","d).max()!!","d:","dao","dao:","data,","day.","deal","decid","deeper","default","defend","defens","definit","deleg","delegates,","delegates.notnul","delegates.notnull()","delegates.notnull.","depend","describ","deserv","design","desir","detail","detekt","develop","developers,","developers.","differ","direct","doctoractivity:","doctorid","doctorid:","done","doubl","dure","easi","easili","element","element)","elements,","elvi","empti","empty.","empty:","enum","error","error(\"print","etc.","even","evolv","exampl","except","expect","expected,","expected.","explain","explanation.","explicit","express","extens","extract","extreme,","fact","featur","find","find.","first","forc","fromnotif","fromnotification:","fun","function","function:","functions:","futur","future,","future.","gener","general,","getnetworkservice(context)","getnews()","getornul","getprinter()","good","handl","handled,","handled.","happen","hard","help","here","here”.","hidden","hide","highli","however,","idea","implement","import","important.","imposs","impossible.","includ","incorrect","increas","indic","inform","information.","init()","initi","initialized,","instanc","instance,","instead","int","int):","int,","intent.extra","intent.extras.getint(doctor_id_arg)","interact","interoper","invok","io","isn’t","it.","item","item,","iterable.firstornull(()","java","junit","jvm,","kind","know","known","kotlin","kotlin,","kotlin’","lack","languages.","largest","largestof()","largestof(a:","largestof(vararg","lateinit","later","later:","lazi","lazily:","lead","led","let","let’","librari","lifecycl","list","list.","list?","listof(a,","long,","look","loudli","main","mainli","make","mani","match","max","mean","meaning","meaningless","mention","messag","message,","messages.","met,","method","miss","misuse.","mockk()","mode","modifi","more","much","márton","name","name?\")","named\")","nearli","need","needed.","networkservic","networkservice.getdata","never","news.foreach","news:","nobodi","nointernetconnection()","none","norm.","nothing.","notifyuser(it)","notnul","npe","npe.","null","null)","null,","null.","nullability.","nullabl","nullwhen","number","nums.max()!!","nums:","object","offens","on","onc","oncreat","oncreate(savedinstancestate:","oncreate,","one.","ones.","oper","operator,","option","option.","option:","orempti","others,","overrid","pack","pars","pass","pattern","patterns.","point","polici","popular","possibl","possible).","possible.","practic","predic","predict","prefer","preferred.","present","present.","primitive,","print","printer","printer!!.print()","printer.print()","printer:","printer?","printer?.nam","printer?.print()","printername1","printername2","printername3","println(\"hello","println(\"what","privat","problem","process(user:","production,","program","programm","programmers.","programming.","project","properli","properly.","properti","property,","provid","quietli","rare","react","react.component.","read","readline()","realli","reason","refactor","removed.","repeat","replac","require,","requirenotnull(user.name)","requirenotnull,","result","return","returned.","review","right","safe","safely,","safest","safety,","sake","scari","scream","seal","see","seem","sens","separately,","set","set?,","short","shouldn’t","show(data!!,","shown","side","side:","silenc","similar","similarli","simpl","simple,","simplest","situat","situation,","situation.","situations.","slightli","slower,","smart","smell.","solut","someon","someth","sometim","sound","special","specifi","stabil","state","state.","static","string","string.tointornull()","string?.","strong","such","suggest","super.oncreate(savedinstancestate)","support","support.","sure","surpris","talk","team","techniqu","tempt","term","test()","tests.","that,","think","those","though","throw","throw,","thrown","thrown.","time","time,","tri","two","type","type.","types:","typic","uiviewcontroller,","uncommon","understand","undesirable.","unexpect","uniniti","unpack","unsaf","up","us","use.","used.","user","user)","usercontrol","usercontroller(dao!!)","usercontroller(dao)","usercontroller?","usercontrollertest","userdao","userdao?","userdata","userdata!!)","val","valu","value.","values.","var","variabl","variables.","variant","variou","veri","view.","viewdidappear","want","want.","way","well","whenev","wide","wider","wonder","won’t","wouldn’t","wrong","wrong,","yang.","yin","{","}","“be","“there","“unpack”"],"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":["(filereader,","(reader","(string)","(the","49:","9","9:","=",">","abov","ad","also,","alway","anymore.","aren’t","argument","as:","autoclos","autocloseable.","automatically,","behavior","big","block","blocks,","bodi","both","bufferedreader(filereader(path))","bufferedreader(filereader(path)).us","bufferedreader,","call","case)","cases,","caught.","close","closeabl","collect","collector","common","complete:","complic","complicated,","consid","contain","content","correct","cost","countcharactersinfile(path:","cssparser),","demand","easi","easili","error","error,","even","eventu","exceptions.","expect","expens","expression:","extend","extract","file","file(path).uselin","file,","file.","files,","final","fun","function","garbag","give","handl","hold","implement","incorrect","incorrect.","inform","inputstream","instead","int","interface,","invok","it.","it.length","item","iter","java","java.io.read","java.new.socket","java.sql.connection,","java.util.scanner.","keep","kotlin","kotlin/jvm,","lambda,","larg","librari","library,","library.","line","line,","lines.","lines.sumbi","load","long","longer","lot","memory.","method","miss","more","need","new","next","object","object:","on","onc","once,","once.","one.","open","oper","option.","outputstream,","over","pass","prefer","previou","problem","process","produc","propagated.","proper","properli","read","reader","reader.close()","reader.linesequence().sumbi","reader.us","receiv","refer","resourc","resource,","resources,","return","safe","sequenc","shortened:","standard","step.","string):","structur","such","summari","support","sure","syntax","take","thank","them,","themselv","there:","therefore,","throw","time","time).","tradition","tri","underli","us","use.","usefunct","uselin","val","way","whole","wrap","{","}"],"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":["(tdd)","(the","10","10:","5","@test","`fib","abov","above,","accident","accumul","achiev","adjust","advantag","afraid","all.","api","applic","approach","architectures.","are:","argument","assertequals(1,","assertequals(2,","assertequals(3,","assertequals(5,","assur","autom","automat","behav","best","better","better.","big","biggest","break","bug","bugs:","build","busi","calcul","call","case","challeng","chang","chapter","chapter,","cheaper","check","check:","clearly,","code","code.","common","complex","concret","confid","correct","correctli","correctly.","cost","cours","debug","develop","developers,","developers:","development.","differ","disadvantag","driven","dure","easili","edg","effect","element","engineers.","ensur","error","especi","establish","even","everyon","exampl","expect","experienc","fast","faster","feedback","few","fib","fib(0))","fib(1))","fib(2))","fib(3))","fib(4))","fibonacci","fill","find","first","first.","fix","forc","fun","function","gener","give","goal","good","good.","hand,","handl","happi","hard","hard,","harm","help","here","illeg","implement","import","int","int.max_value.","internally.","introduc","invest","it.","it10.","item","kind","know","kotlin","later.","learn","legaci","less","logic","long","look","loop","lot","maintainability.","make","manag","manual","manually.","more","much","n","need","neg","null","nullabl","number","numbers.","numbers:","object","object,","obtain","on","oper","or,","orthogon","outside,","over","part","past.","path)","perspective.","pleasurable11.","poorli","posit","positions,","positions`()","potenti","practic","present","primari","prioriti","problem","problemat","product","program","programmers,","proper","properli","provid","psycholog","public","quicker","quit","realli","recogn","reduc","refactor","reflect","regression.","reliabl","reliable.","requir","respons","rest","result","result,","run","run,","safer,","safeti","safety.","satisfi","save","scare","section","seen","short","shown","skill","small","softwar","someth","spend","start","stop","such","suffici","sufficient.","summari","support","suppos","system","take","tend","tendenc","term","term,","test","testable.","tested,","tester","testing,","testing.","tests,","tests.","tests:","th","that,","them,","them.","then.","there.","those","though","time","touch","typic","ultim","understand","unit","us","used.","user’","values.","way","well","without","work","works.","write","written","you’v","{","}"],"Part 1 Good code/Chapter 2 Readability/Introduction.html":["(and","1","15","2:","4=/[:+/(,/,\"0/~i:1)|.])*.1,:]","abstract","absurdli","allow","although","ambit","apis.","apl","apl.","apl:","bit","boilerpl","book.","challeng","champion","chapter","charact","characterist","class","clean","code","code,","come","common","compar","comput","concentr","concept","concis","concise.","contests.","conway’","design","design,","design.","develop","dive","done","don’t","elimin","especi","even","example,","exist","experienc","fact","featur","few","first","fool","fowler,","function","gener","golf","good","hard","help","here","hide","highlight","honest:","human","implement","important,","improv","instance,","introduc","introduct","isn’t.","item","j:","john","keyboard.","know","kotlin","languag","languages,","languages.","let’","life=:[:+/(3","life”","lot","make","meaning","misconcept","more","much","never","noise:","p.","part","particular","popular","probabl","problem.","program","programm","provid","read.","readability,","readabl","readable.","realiz","realli","refactoring:","refer","relat","repetit","rest","same","serv","set","short”.","start","structures.","such","suggestions.","that’","those","thought","thu","tool","topic","two","understand","understand.","us","veri","want.","whatev","wisely.","works.","world),","write","–martin","“game","“wow,"],"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":["!=","\"${it.name}","\"\\n\")","\"a\"","\"b\"","\"c\"","${it.result}\"","${it.surname},","&&","&&,","()","(after","(and","(both","(if/else,","(person","(safe","(structure,","(thi","+",".filter",".jointostring(separ",".let(::bufferedinputstream)",".let(::objectinputstream)",".let(::print)",".let(::zipinputstream)",".readobject()","//","11","11:","50","=",">=",">string):","?.,","?.let","?.let(view::showperson)","?:","?:,","abc","acknowledg","actual","ad","add","addit","addition","additionally,","adult.","alreadi","alway","analyz","anoth","answer.","anymore.","api,","append","are,","are.","argument","argument’","art","art.","ask","avoided.","b","b.","b?","back","bad","balanc","base","basic","beginn","behavior","behind","believ","better,","better.","bit","block","block.","book","both","bound","brain","branch","branch.","break","build","c.","calcul","call","calls).","came","care","career","case","cast","chanc","chang","chapter","clarifi","class","clean","clear","clearli","code","code).","code,","code.","code:","cognit","common","commonli","compar","complex","complexities.","comprehend","concaten","confusing.","constantli","construct","context","convent","cover","day","deal","deal.","debug","decor","definit","depend","describ","design","develop","developers,","developers.","differ","difference?","disciplines.","discuss","distance.","don’t","each","easier","easili","easy.","elvi","enough.","error","error.","especi","estim","even","everyon","everyone.","exampl","experi","experienc","explicit","express","expression.","expressiveness.","extrem","f()","fact","fair","fall","familiar","fast","featur","fewer","fight","fileinputstream(\"/file.gz\")","find","fine","first","fix","flexibl","focu","follow","form","francisco","fruitless","fun","function","function,","functions,","gave","gener","go","good","great","group","grow","guard","hard","harder","here","hire","hold","however,","idiom","idioms.","if/els","if/else,","implement","implementation,","implementation.","implementations:","implicit,","import","individu","infix","instanc","instance:","instead","intellij","introduc","invok","invoked.","isn’t","it.","it.isadult","it.result","item","it’","junior","know","known","kotlin","kotlin,","kotlin.","lambda","languag","last","later:","learn","less","let,","let.","let:","let’","li","line","line.","load","load.","logic","lot","made","make","mani","martin","mean","means.","method","method.","mind.","minut","misused,","modifi","modify.","month","more","more.","mostli","move","much","mutabl","naiv","name","name:","names,","nearli","need","never","new","not.","notic","now.","null","null,","null.","nullabl","obj","object","observ","obvious,","on","onc","once,","oper","operator.","operator:","operators.","over","overrid","pain","pattern","pattern).","pay","peopl","person","person(v","person.isadult)","person:","person?","person?.let","person?.takeif","plu","popular","possibl","prefer","present","previou","price","print(abc)","print(it.name)","printname()","probabl","problem","program","programming.","properti","puzzl","quickly.","ratio","read","readabl","readable.","reading,","reason","reason.","reasoning,","recogn","recognizable.","reduc","refactorization,","refer","references):","reinvent","remembered.","remov","result","return","rewritten.","right","robert","rule","run","s","safe","same","san","saw","science.","search","second","see","seem","senior)","sens","shorten","show","showerror","showperson","side","simpler.","singl","situat","smart","someobject","someth","specif","spend","spent","spot","start","statement","still","still,","string","string)","string.and(s:","string.invoke(f:","structur","structures,","structures.","student","style.","such","suggestions,","sum","supported.","sure","surely,","syntax","take","takeif,","teach","ten","terribl","them).","them.","they’v","thing","things.","think","third","this,","this:","those","though","thread.","throughout","time","togeth","together,","tool","total","train","tri","turn,","two","typic","unbelievable,","understand","understood","unexpect","us","usag","use,","use.","usual","val","var","varieti","veri","view","view.hideprogress()","view.hideprogresswithsuccess()","view.showerror()","view.showperson(it)","view.showperson(person)","view::showperson).","violat","want","way","way.","way?","weeks,","well","well!","we’v","wheel.","whole","wide","wonder","work","work.","works.","workshop","worst","wouldn’t","wrap","write","writing.","year","{","}","‘lambda","“creative”"],"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html":["12","consist","function","item","mean","name","oper"],"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html":["13","avoid","item","oper","return","unit"],"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html":["14","clear","item","specifi","type","variabl"],"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html":["15","consid","explicitli","item","receiv","referenc"],"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html":["16","behavior","item","properti","repres","state"],"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html":["17","argument","consid","item","name"],"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html":["18","code","convent","item","respect"],"Part 2 Code design/Chapter 3 Reusability/Introduction.html":["introduct"],"Part 2 Code design/Chapter 3 Reusability/Item 19 Do not repeat knowledge.html":["19","item","knowledg","repeat"],"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html":["20","algorithm","common","item","repeat"],"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html":["21","common","deleg","extract","item","pattern","properti","us"],"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html":["22","algorithm","common","gener","implement","item","us"],"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html":["23","avoid","item","paramet","shadow","type"],"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html":["24","consid","gener","item","type","varianc"],"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html":["25","between","common","differ","extract","item","modul","platform","reus"],"Part 2 Code design/Chapter 4 Abstraction design/Introduction.html":["introduct"],"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html":["26","abstract","each","function","item","level","singl","term","written"],"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html":["27","abstract","against","chang","code","item","protect","us"],"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html":["28","api","item","specifi","stabil"],"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html":["29","api","consid","extern","item","wrap"],"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html":["30","element","item","minim","visibl"],"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html":["31","contract","defin","document","item"],"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html":["32","abstract","contract","item","respect"],"Part 2 Code design/Chapter 5 Object creation/Introduction.html":["introduct"],"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html":["33","consid","constructor","factori","function","instead","item"],"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html":["34","argument","consid","constructor","item","name","option","primari"],"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html":["35","complex","consid","creation","defin","dsl","item","object"],"Part 2 Code design/Chapter 6 Class design/Introduction.html":["introduct"],"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html":["36","composit","inherit","item","over","prefer"],"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html":["37","bundl","data","item","modifi","repres","us"],"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html":["38","action","function","instead","interfac","item","oper","pass","type","us"],"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html":["39","class","hierarchi","item","prefer","tag"],"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html":["40","contract","equal","item","respect"],"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html":["41","code","contract","hash","item","respect"],"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html":["42","compar","contract","item","respect"],"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html":["43","api","consid","essenti","extens","extract","item","non","part"],"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html":["44","avoid","extens","item","member"],"Part 3 Efficiency/Chapter 7 Make it cheap/Introduction.html":["introduct"],"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html":["45","avoid","creation","item","object","unnecessari"],"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html":["46","function","inlin","item","modifi","paramet","type","us"],"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html":["47","class","consid","inlin","item","us"],"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html":["48","elimin","item","object","obsolet","refer"],"Part 3 Efficiency/Chapter 8 Efficient collection processing/Introduction.html":["introduct"],"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html":["49","big","collect","item","more","on","prefer","process","sequenc","step"],"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html":["50","item","limit","number","oper"],"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html":["51","array","consid","critic","item","perform","primit","process"],"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html":["52","collect","consid","item","mutabl","us"]},"length":61},"tokenStore":{"root":{"0":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}},".":{"0":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"docs":{}},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}},"1":{"0":{"0":{"0":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":2}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"1":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":2.5}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"2":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html","tf":1.4285714285714284}},"]":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"3":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html","tf":1.6666666666666665}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}},"4":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html","tf":1.6666666666666665}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}},"5":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html","tf":1.6666666666666665}}},"6":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html","tf":1.6666666666666665}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"7":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html","tf":2}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}},"8":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html","tf":2}}},"9":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 3 Reusability/Item 19 Do not repeat knowledge.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 19 Do not repeat knowledge.html","tf":2.5}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}},"docs":{"./":{"ref":"./","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":2.50293542074364},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.016597510373443983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}},".":{"docs":{},".":{"1":{"0":{"0":{"0":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},")":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}}},"2":{"0":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html","tf":2}}},"1":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html","tf":1.1111111111111112}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"2":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html","tf":1.4285714285714284}}},"3":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html","tf":1.6666666666666665}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}},"4":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html","tf":1.6666666666666665}}},"5":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html","tf":1.1111111111111112}}},"6":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html","tf":1.1111111111111112}}},"7":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html","tf":1.25}}},"8":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html","tf":2}}},"9":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html","tf":1.6666666666666665}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"]":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"docs":{"./":{"ref":"./","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":2.0014025245441793},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419}}}},"3":{"0":{"5":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},"’":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html","tf":2}}},"1":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html","tf":2}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"2":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html","tf":2}}},"3":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html","tf":1.4285714285714284}}},"4":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html","tf":1.25}}},"5":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html","tf":1.25}}},"6":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html","tf":1.6666666666666665}}},"7":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html","tf":1.25}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"8":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html","tf":1}}},"9":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html","tf":1.4285714285714284}}},"docs":{"./":{"ref":"./","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":1.4285714285714284},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"4":{"0":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html","tf":2}}},"1":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html","tf":1.6666666666666665}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"2":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268},"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html","tf":2}}},"3":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html","tf":1.1111111111111112}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"4":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html","tf":2}}},"5":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html","tf":1.6666666666666665}}},"6":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html","tf":1.1111111111111112}}},"7":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html","tf":1.6666666666666665}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"8":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html","tf":1.6666666666666665}}},"9":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html","tf":1}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}},"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":2},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"]":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"=":{"docs":{},"/":{"docs":{},"[":{"docs":{},":":{"docs":{},"+":{"docs":{},"/":{"docs":{},"(":{"docs":{},",":{"docs":{},"/":{"docs":{},",":{"docs":{},"\"":{"0":{"docs":{},"/":{"docs":{},"~":{"docs":{},"i":{"docs":{},":":{"1":{"docs":{},")":{"docs":{},"|":{"docs":{},".":{"docs":{},"]":{"docs":{},")":{"docs":{},"*":{"docs":{},".":{"1":{"docs":{},",":{"docs":{},":":{"docs":{},"]":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}},"5":{"0":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html","tf":2}}},"1":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html","tf":1.25}}},"2":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html","tf":1.6666666666666665}}},"3":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"9":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":1.6666666666666665},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},"6":{"1":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"7":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":1.4285714285714284}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}},"7":{"1":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"3":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"9":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":1.1111111111111112}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},"8":{"3":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"9":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":2}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"9":{"1":{"1":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"docs":{}},"7":{"docs":{},"]":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":2}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}},"docs":{},"[":{"1":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"2":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}}},"docs":{"./":{"ref":"./","tf":0.10179640718562874}},"x":{"docs":{},"]":{"docs":{"./":{"ref":"./","tf":0.017964071856287425}}}},"]":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"f":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"o":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"]":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}}},"z":{"docs":{},"z":{"docs":{},"z":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"]":{"docs":{"./":{"ref":"./","tf":0.10179640718562874}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.007984031936127744},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419},"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html","tf":1.1111111111111112},"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html","tf":1.25},"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html","tf":2}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},"u":{"docs":{},"r":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}}},"o":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"u":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"c":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html","tf":1}}}},"v":{"docs":{},"e":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.005610098176718092}},"o":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"u":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html","tf":1.25}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"r":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html","tf":2},"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html","tf":1.4285714285714284}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"l":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},"o":{"docs":{},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"s":{"docs":{},"o":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.0070126227208976155},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815}}}}}},"p":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html","tf":2},"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html","tf":1.1111111111111112}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.020833333333333332},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.01016260162601626}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"l":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":1.6723377441713925},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204},"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html","tf":2},"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html","tf":1.25}},"s":{"9":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"’":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html","tf":1.25}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}}}}}}}}}}},"e":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}}}}}}},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.007984031936127744},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.00477326968973747},"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html","tf":2},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html","tf":1.6666666666666665}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"z":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}},"a":{"docs":{},"a":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"\"":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.01397712833545108}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"s":{"docs":{},"?":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}},"y":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"z":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}},"i":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.024896265560165973}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.016597510373443983}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"s":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}},"u":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0063532401524777635},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.008506616257088847},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.011137629276054098}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"1":{"0":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}},"2":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"3":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"5":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"docs":{}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},"e":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}}}}},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}},"b":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.006045949214026602}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.012195121951219513}},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204},"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html","tf":1.6666666666666665}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html","tf":1.1111111111111112}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}}}},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.006364359586316627}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.003780718336483932}},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html","tf":1}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}}}}},"l":{"docs":{},"l":{"docs":{},"]":{"docs":{},"”":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html","tf":1.25}},"e":{"docs":{},"?":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"s":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}}}}}}},"z":{"docs":{},"z":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809}},".":{"docs":{},"u":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}}}}}}}},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}},"s":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}}}},"e":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"n":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}}}}}},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.005610098176718092},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"c":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0053816046966731895},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}}},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}},"o":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"d":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.007561436672967864},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"h":{"docs":{},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}},"r":{"docs":{},"a":{"docs":{},"u":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}}}},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"y":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"?":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.00684931506849315},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614},"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html","tf":1.25}},"e":{"docs":{},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"c":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.015968063872255488},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.01675977653631285},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.001996007984031936}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"c":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.03213610586011342},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.018292682926829267}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"o":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.007894736842105263}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.007984031936127744},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.008317025440313111},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.010165184243964422},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.016597510373443983},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.015789473684210527},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.00954653937947494},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204},"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html","tf":2.8571428571428568},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html","tf":1.6666666666666665}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}},"i":{"docs":{},"f":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204},"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html","tf":1.6666666666666665}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"i":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":2.029940119760479}},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"n":{"docs":{"./":{"ref":"./","tf":0.001996007984031936}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.00998003992015968},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.005671077504725898},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.008130081300813009},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.027932960893854747},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.012091898428053204},"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html","tf":2},"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html","tf":1.25},"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html","tf":1.6666666666666665}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.009295499021526418},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html","tf":1},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html","tf":1.6666666666666665}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268}}}},"?":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"o":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"b":{"docs":{},"l":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.007984031936127744},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614},"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html","tf":2},"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html","tf":1.1111111111111112},"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html","tf":1.4285714285714284},"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html","tf":1.1111111111111112}},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},"u":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408},"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html","tf":2}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.006045949214026602},"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html","tf":1.25}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"o":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html","tf":1.6666666666666665}}}}},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}},"u":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}},"i":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.021956087824351298},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html","tf":1.6666666666666665},"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html","tf":2},"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html","tf":1.4285714285714284},"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html","tf":1.25},"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html","tf":1.25},"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html","tf":1.1111111111111112},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html","tf":1.6666666666666665},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html","tf":1.25},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html","tf":1.6666666666666665}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html","tf":1.4285714285714284}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html","tf":1.4285714285714284},"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html","tf":1.25}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"c":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.00998003992015968},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html","tf":2},"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html","tf":2},"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html","tf":2},"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html","tf":2}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},"o":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"!":{"docs":{},"!":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}}}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614},"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html","tf":2}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}}}},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.01675977653631285}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.01675977653631285}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"i":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"(":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},"’":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}},"p":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.004403131115459882}}},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"r":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.003780718336483932},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.00477326968973747},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.012195121951219513}}},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.014970059880239521}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.005988023952095809},"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html","tf":1.25},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html","tf":1.6666666666666665}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html","tf":1.25}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":1.4419047619047618}}}}}},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}}}},"+":{"docs":{},"+":{"docs":{},"?":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608}}}}}}}}}}}}},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.005568814638027049},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"s":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.005568814638027049},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.01016260162601626},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.005671077504725898},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.005610098176718092}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842}}}}},"u":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.02074688796680498}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992}}}}}}}}},"e":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"”":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"n":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"m":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}},"r":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"s":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.005870841487279843},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html","tf":2.5}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}},"o":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}}},"y":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.0070126227208976155},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html","tf":2},"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html","tf":1.25}},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}}}}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.016597510373443983}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.00477326968973747},"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html","tf":1.1111111111111112}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}},"a":{"docs":{},"y":{"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{}},"docs":{}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.007984031936127744},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0223463687150838},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":2.5012091898428053}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}},"o":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.041666666666666664},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.016260162601626018},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}}}}},"e":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}},"k":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0053816046966731895},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.008464328899637243},"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html","tf":1.1111111111111112}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"?":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"e":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html","tf":2}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}}}}},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}},"w":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}},"s":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html","tf":1.25}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"o":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},"!":{"docs":{},"!":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"e":{"docs":{},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614},"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html","tf":1.1111111111111112}}}},"s":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"r":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"t":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0053816046966731895},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.009817671809256662},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.013157894736842105},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.012195121951219513},"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html","tf":2}},"s":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}},"`":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":1.4336540206934105},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html","tf":1.6666666666666665}}}}}},"v":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.003780718336483932},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html","tf":2}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":1.4485714285714284},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.010526315789473684},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"”":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"(":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html","tf":1.1111111111111112}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}},"i":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":1.6865154379332072},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.007894736842105263},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.00477326968973747},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"r":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.006045949214026602}}}}}}},"n":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html","tf":1.6666666666666665}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":2.004149377593361}},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html","tf":1.1111111111111112},"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html","tf":2}}},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html","tf":1.6666666666666665}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html","tf":1.1111111111111112},"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html","tf":1.1111111111111112},"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html","tf":1.1111111111111112}}}}},"e":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},"e":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.005671077504725898},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.02},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.02894736842105263},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}},"d":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},"u":{"docs":{},".":{"docs":{},"u":{"docs":{},"m":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}},"t":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949}}}}},"u":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.006097560975609756},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815}},"t":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.004725897920604915}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.004725897920604915}}}}}},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892}}}}}},"t":{"docs":{},"c":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html","tf":1.4285714285714284}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}},"i":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":1.12953216374269}},"e":{"docs":{},"(":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"r":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"l":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},"e":{"docs":{},"”":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"l":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}}}}}}}},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.008130081300813009}}}}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"u":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.005870841487279843},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.008894536213468869},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.016597510373443983},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.01606805293005671},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.014970059880239521},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.011976047904191617},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.024574669187145556},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.007894736842105263},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.008130081300813009},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.006045949214026602},"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html","tf":1.4285714285714284},"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html","tf":1.1111111111111112},"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html","tf":1.4285714285714284},"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html","tf":1},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html","tf":2.2222222222222223}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},"e":{"2":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}}},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"e":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"d":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.006097560975609756}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}},"r":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},"m":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"a":{"docs":{},"t":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}},"o":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}},"w":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}},"c":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.011976047904191617}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809}}}}}}}}}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"z":{"docs":{},"\"":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.008415147265077139},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},"e":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.005610098176718092},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.008130081300813009},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"z":{"docs":{},"z":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}},"a":{"docs":{},"t":{"1":{"2":{"6":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}},"docs":{}},"docs":{}},"docs":{}}},"x":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.006097560975609756},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}},"b":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"(":{"0":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"1":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"2":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"3":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"4":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"docs":{}},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"o":{"docs":{},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003913894324853229},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.006097560975609756},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.008464328899637243},"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html","tf":1.4285714285714284},"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html","tf":1.6666666666666665}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}},"docs":{}}}}}}}}}}}},"l":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"l":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}},"o":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.008130081300813009},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"a":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"l":{"docs":{},"f":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"u":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}}}},"d":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"a":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}},"v":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},"l":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.02368421052631579},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":2.012728719172633},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"]":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}},"s":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html","tf":1.6666666666666665}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},"v":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"r":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}}}}},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html","tf":1.4285714285714284}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"g":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}}}},"r":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}},"l":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"o":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"w":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"p":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}}},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"r":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},"”":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.005610098176718092},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.011976047904191617},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.016928657799274487},"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html","tf":1.4285714285714284}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"s":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.020833333333333332},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}}},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.011252446183953033},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}}}}}},"n":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":2.020746887966805}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}},"x":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.012448132780082987},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html","tf":1.6666666666666665}}}}}},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html","tf":1.1111111111111112},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html","tf":1.6666666666666665}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.004725897920604915},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204},"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html","tf":1.4285714285714284},"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html","tf":1}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"?":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"i":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.005610098176718092},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.014970059880239521},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.016597510373443983},"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html","tf":1}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},"e":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"j":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},"t":{"docs":{"./":{"ref":"./","tf":10.015968063872256},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":10},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":10.005586592178771},"Part 2 Code design/Chapter 3 Reusability/Introduction.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Introduction.html","tf":10},"Part 2 Code design/Chapter 4 Abstraction design/Introduction.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Introduction.html","tf":10},"Part 2 Code design/Chapter 5 Object creation/Introduction.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Introduction.html","tf":10},"Part 2 Code design/Chapter 6 Class design/Introduction.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Introduction.html","tf":10},"Part 3 Efficiency/Chapter 7 Make it cheap/Introduction.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Introduction.html","tf":10},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Introduction.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Introduction.html","tf":10}}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}}}}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.005568814638027049}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}}}}}},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.03333333333333333},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.010526315789473684},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}}}}},"t":{"1":{"0":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"docs":{}},"docs":{},"e":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.10379241516966067},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":2.50146771037182},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":2},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":1.4285714285714284},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":2},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":1.6676118462507874},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":1.4419047619047618},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":1.1137426900584795},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":2.0031821797931584},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":2.0089820359281436},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":2.002032520325203},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":2.5024183796856105},"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html","tf":1.4285714285714284},"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html","tf":1.6666666666666665},"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html","tf":1.6666666666666665},"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html","tf":1.6666666666666665},"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html","tf":1.6666666666666665},"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html","tf":2},"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html","tf":2},"Part 2 Code design/Chapter 3 Reusability/Item 19 Do not repeat knowledge.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 19 Do not repeat knowledge.html","tf":2.5},"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html","tf":2},"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html","tf":1.1111111111111112},"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html","tf":1.4285714285714284},"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html","tf":1.1111111111111112},"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html","tf":1.1111111111111112},"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html","tf":1.25},"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html","tf":2},"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html","tf":2},"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html","tf":2},"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html","tf":2},"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html","tf":1.4285714285714284},"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html","tf":1.25},"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html","tf":1.25},"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html","tf":1.25},"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html","tf":1},"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html","tf":1.4285714285714284},"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html","tf":2},"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html","tf":2},"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html","tf":1.1111111111111112},"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html","tf":2},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html","tf":1.6666666666666665},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html","tf":1.1111111111111112},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html","tf":1.6666666666666665},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html","tf":1.6666666666666665},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html","tf":1},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html","tf":2},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html","tf":1.25},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html","tf":1.6666666666666665}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},"(":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.014970059880239521}}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}},"’":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"!":{"docs":{},"!":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},"i":{"docs":{},"o":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.009673518742442563}},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"s":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}},"f":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"/":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}},"o":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 3 Reusability/Item 19 Do not repeat knowledge.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 19 Do not repeat knowledge.html","tf":2.5}}}}}},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}}}}}},"o":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.052083333333333336},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.006360078277886497},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.015247776365946633},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.003780718336483932},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.027932960893854747},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.010882708585247884}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815}}},"/":{"docs":{},"j":{"docs":{},"v":{"docs":{},"m":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}},"?":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"’":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}},"y":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.012195121951219513}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":1.116374269005848},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.00954653937947494}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}},"z":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"y":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"r":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"a":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html","tf":1.1111111111111112}}}}},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.008464328899637243}}}},"a":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"r":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"f":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}},"’":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"g":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"i":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":2.505381604696673},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html","tf":2}}}}},"v":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}},"f":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"=":{"docs":{},":":{"docs":{},"[":{"docs":{},":":{"docs":{},"+":{"docs":{},"/":{"docs":{},"(":{"3":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}},"docs":{}}}}}}}},"”":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}},"s":{"docs":{},"t":{"1":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{}}}}},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{}}}}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"2":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144}},".":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"3":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.008806262230919765},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.008894536213468869},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.005671077504725898},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"4":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}},"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},"o":{"docs":{},"f":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"(":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{}}},"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608}}},"a":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},">":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584}}},"?":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}},"k":{"docs":{},"e":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.02},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}},"n":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.023952095808383235},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809}}}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"a":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}},"(":{"docs":{},"\"":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"n":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.006097560975609756}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}},"o":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.0070126227208976155},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}},"s":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},"t":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}},"u":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.006360078277886497},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.007561436672967864},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.008130081300813009},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.01675977653631285},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815}}}},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}},"j":{"docs":{},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"e":{"4":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}}}}}}},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"r":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"d":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"y":{"docs":{},"b":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949}}}},"l":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}},"x":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.00477326968973747},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815},"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html","tf":1.4285714285714284}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}}}}}}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html","tf":2}}}}},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.004403131115459882},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"s":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":2},"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html","tf":2}}}},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}},"i":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204},"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html","tf":1.25},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html","tf":1.1111111111111112}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"u":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html","tf":1.1111111111111112}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.005870841487279843},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.005671077504725898},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.014970059880239521},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.01016260162601626},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0223463687150838},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.010882708585247884},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html","tf":1}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"n":{"docs":{},"e":{"docs":{},"y":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}},"t":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"ł":{"docs":{},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"c":{"docs":{},"k":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}}}}}},"v":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":2.518101761252446},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.0070126227208976155},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html","tf":1.6666666666666665}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"4":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{}}}}}},"o":{"docs":{},"f":{"docs":{},"(":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"u":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268}}}}}}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.012720156555772993}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.006097560975609756},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.010882708585247884}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}},"á":{"docs":{},"r":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204},"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html","tf":1.4285714285714284},"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html","tf":2},"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html","tf":1.25}},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"?":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}},"\"":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"s":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}},"i":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html","tf":1.1111111111111112}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"t":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"f":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"y":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}}}}},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}},"r":{"docs":{},"m":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.01397712833545108},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":1.1321637426900586},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":2.0310262529832936},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},";":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.015247776365946633},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.01909307875894988},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211}}}}}}},"s":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.014025245441795231},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.008130081300813009},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html","tf":2}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}},"docs":{}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},"!":{"docs":{},"!":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.020833333333333332},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.010763209393346379},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.005671077504725898},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.00954653937947494},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.023952095808383235},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.012195121951219513},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.010882708585247884}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"x":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},"(":{"docs":{},")":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"p":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.010165184243964422},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.007984031936127744},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204},"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html","tf":1.25},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html","tf":1.6666666666666665},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html","tf":1.6666666666666665}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003913894324853229}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html","tf":1.6666666666666665}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}},"n":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.006360078277886497},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.008415147265077139},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0063532401524777635},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":1.435238095238095},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.005568814638027049},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.011976047904191617},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.009673518742442563},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html","tf":1}},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809}}}}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.007984031936127744},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.003780718336483932},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.008464328899637243},"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html","tf":1.4285714285714284},"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html","tf":1},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html","tf":2}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"o":{"docs":{},"r":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html","tf":1.25}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408},"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html","tf":1.6666666666666665}},"a":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"u":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}},"u":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}}},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},"n":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}}}}}},"l":{"docs":{},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"r":{"docs":{},"g":{"docs":{},".":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"d":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"w":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html","tf":1.6666666666666665},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html","tf":1.1111111111111112}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.007984031936127744},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.008130081300813009},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html","tf":1.1111111111111112}},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}}}},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html","tf":1}}},"t":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614},"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html","tf":1.1111111111111112}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"h":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"c":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"y":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html","tf":1.25}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}}}}}}}},"(":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.004725897920604915}}},"’":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"?":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":1.4450898529678706},"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html","tf":1.1111111111111112}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"1":{"1":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"docs":{}},"docs":{}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":1.429842076601924},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":1.1137426900584795},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},"`":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.005870841487279843},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815}}}}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.00998003992015968},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.006360078277886497},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.009817671809256662},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":1.435238095238095},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":1.1190058479532163},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408},"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html","tf":1.4285714285714284},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html","tf":1}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html":{"ref":"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html","tf":1.25}}}}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html","tf":1.25}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.0182328190743338}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}}}},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}},"b":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}},"f":{"docs":{},"i":{"docs":{},"z":{"docs":{},"z":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}},"b":{"docs":{},"c":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"w":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"2":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}},"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892}},"!":{"docs":{},"!":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"?":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"1":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"2":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"3":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"docs":{}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.007955449482895784}},"e":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"c":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"o":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html","tf":1},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html","tf":1.25}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":2.0023866348448687},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"t":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0136986301369863},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.005610098176718092},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408},"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html","tf":2.2222222222222223}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"a":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html","tf":1.25}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}}},"n":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.006097560975609756},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.007255139056831923}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.015247776365946633},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"s":{"docs":{},"y":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.01614481409001957},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.007255139056831923}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":2.507255139056832}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.011976047904191617}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"z":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.008415147265077139},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"x":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html","tf":1.6666666666666665}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}},"g":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html","tf":1.6666666666666665}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html","tf":1.6666666666666665}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 2 Code design/Chapter 3 Reusability/Item 19 Do not repeat knowledge.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 19 Do not repeat knowledge.html","tf":2.5},"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html","tf":2}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html","tf":1.25}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"o":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":2.020958083832335}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.00998003992015968},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html","tf":2},"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html","tf":2},"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html","tf":2},"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html","tf":2}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":2.2432748538011698},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}},"c":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992}}}}}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.006360078277886497},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.011435832274459974},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.012287334593572778},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.018421052631578946},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.007159904534606206},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.011976047904191617},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408},"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html","tf":1.6666666666666665}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}},"u":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html","tf":1.1111111111111112}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.001996007984031936}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}},"o":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.01606805293005671},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}},"u":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"l":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}},"g":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"s":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.006045949214026602}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"o":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"s":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.007159904534606206},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"t":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.03125},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.007623888182973317},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}},"m":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}},"k":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"w":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":2.021037868162693}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.005610098176718092}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.008415147265077139},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.017964071856287425},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html","tf":1}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"u":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},"s":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"?":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"l":{"docs":{},"f":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.004725897920604915}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}}}}}},"t":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"v":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}},"a":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.010526315789473684},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}}}},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html","tf":1.6666666666666665}}}}},"r":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"e":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}},"”":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"!":{"docs":{},"!":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815},"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html","tf":1.1111111111111112}}}}},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"d":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"p":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"e":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.00477326968973747},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"s":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}},"e":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"z":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"o":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":1.432383372662915},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"i":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.005671077504725898},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815}}},"i":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"i":{"docs":{"./":{"ref":"./","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.016597510373443983},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":1.6780088216761184},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html","tf":2}},"c":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}},"a":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}}}},"a":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}},"o":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html","tf":2}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":1.4485714285714284},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712}}}}}}},"t":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.008806262230919765},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":1.6780088216761184},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html","tf":1.6666666666666665}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"d":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"y":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"r":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}},"c":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}},"(":{"2":{"0":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"docs":{}},"docs":{}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"docs":{}},"docs":{}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}},"e":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html","tf":1}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}}},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},"[":{"4":{"docs":{},"]":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{}}}}}}}}}},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.008894536213468869},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.007561436672967864},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.014970059880239521}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},"?":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}},"!":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.005610098176718092},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.013232514177693762},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.010526315789473684},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.006364359586316627},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.011976047904191617},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.006097560975609756},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}},"m":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"r":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.003977724741447892},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144}}},"=":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"ł":{"docs":{},"a":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.005671077504725898},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.00477326968973747},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"l":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"n":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"⁶":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"”":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.006097560975609756}}}}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html","tf":1.4285714285714284}}},"l":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"b":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"k":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"i":{"docs":{},"f":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html","tf":1.1111111111111112}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.008506616257088847},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":2.0569105691056913}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.006097560975609756}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.012195121951219513}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.006097560975609756}}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"x":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.003780718336483932}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.013972055888223553},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":1.469232165547286},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":2.0497925311203318},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html","tf":1.6666666666666665},"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html","tf":1},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html","tf":1.1111111111111112}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"r":{"docs":{},"u":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.020833333333333332},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}},"i":{"docs":{},"t":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842}}}}},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.0070126227208976155},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.013157894736842105},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.003780718336483932},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}},"t":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},"’":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}},"e":{"docs":{},"m":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}},"’":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"n":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"y":{"docs":{},"’":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"i":{"docs":{},"s":{"docs":{},"!":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"n":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}}},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"r":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.010396975425330813},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.00954653937947494},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0029354207436399216},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.012448132780082987}}},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575}},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"1":{"0":{"0":{"0":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}},"docs":{}},"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}},"docs":{}},"5":{"0":{"0":{"0":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.012287334593572778},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.02},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.007894736842105263},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}},"u":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.01016260162601626},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}}}}}},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}},"o":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"i":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"w":{"docs":{},"o":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},"?":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.006616257088846881},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":2.042682926829268},"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html","tf":1.6666666666666665}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.008506616257088847}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html","tf":1.6666666666666665}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608}},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.006045949214026602}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419}}}}}},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584}}}}}}},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.017964071856287425},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.03125},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.015166340508806261},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.011220196353436185},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.015247776365946633},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.012448132780082987},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.026465028355387523},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.03333333333333333},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.02894736842105263},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.02545743834526651},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":2.0239520958083834},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.018292682926829267},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.02418379685610641},"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html","tf":1.1111111111111112},"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html","tf":1.4285714285714284},"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html","tf":1.25},"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html","tf":1.25},"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html":{"ref":"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html","tf":1},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html","tf":1.1111111111111112},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html":{"ref":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html","tf":1.6666666666666665},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html":{"ref":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html","tf":1.6666666666666665}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}},"e":{"docs":{},"r":{"1":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}},"2":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},"3":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.002446183953033268},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.012622720897615708},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0063532401524777635},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.007561436672967864},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}},"(":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},"\"":{"docs":{},"m":{"docs":{},"a":{"docs":{},"j":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"j":{"docs":{},"a":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}}}}}}},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"ł":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.007623888182973317}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"!":{"docs":{},"!":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"!":{"docs":{},"!":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211}}}},"!":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"?":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"?":{"docs":{},".":{"docs":{},"a":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"o":{"docs":{},"!":{"docs":{},"!":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"?":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"o":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"?":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},"t":{"docs":{},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"!":{"docs":{},"!":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}},"’":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"d":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712}}}}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"a":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"p":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.008317025440313111},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.008415147265077139},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.003992015968063872},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":2.0308555399719497},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html","tf":1.6666666666666665}},"e":{"docs":{},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"’":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"n":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html":{"ref":"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html","tf":1.6666666666666665}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"o":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.018590998043052837},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.021037868162692847},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.017789072426937738},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.006616257088846881},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.007894736842105263},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.006364359586316627},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0063532401524777635},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.007894736842105263},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.006364359586316627}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},"s":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html","tf":2}},"e":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}},"e":{"docs":{},"w":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0048367593712212815}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003913894324853229},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}}},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204},"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html","tf":1.6666666666666665}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003424657534246575},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":2.0101626016260163},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.0111731843575419},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.001996007984031936},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.006097560975609756},"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html":{"ref":"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html","tf":1.1111111111111112}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}}},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}}}},"’":{"docs":{},"l":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.020833333333333332},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"l":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.008130081300813009},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"!":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"a":{"docs":{},"y":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.005870841487279843},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.010396975425330813},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.007894736842105263},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.00954653937947494},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.005988023952095809},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.008130081300813009},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},"s":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"?":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"n":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}},"e":{"docs":{},"l":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"y":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}},"t":{"docs":{},"h":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}}},"d":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"o":{"docs":{},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.002835538752362949},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"r":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.005671077504725898},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.008130081300813009},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"s":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"h":{"docs":{},"o":{"docs":{},"p":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"l":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}},")":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"d":{"docs":{},"s":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}},"z":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.001996007984031936}}},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.008298755186721992}}}}}}}},"中":{"docs":{},"文":{"docs":{},"翻":{"docs":{},"译":{"docs":{"./":{"ref":"./","tf":0.001996007984031936}}}}}},"在":{"docs":{},"线":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"地":{"docs":{},"址":{"docs":{"./":{"ref":"./","tf":0.001996007984031936}}}}}}}},"当":{"docs":{},"前":{"docs":{},"进":{"docs":{},"度":{"docs":{},"：":{"docs":{},"英":{"docs":{},"文":{"docs":{},"原":{"docs":{},"文":{"docs":{},"搬":{"docs":{},"运":{"docs":{},"中":{"docs":{"./":{"ref":"./","tf":0.001996007984031936}}}}}}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.022871664548919948},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}}}}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0038119440914866584},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},":":{"1":{"0":{"8":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{}},"4":{"8":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0063532401524777635}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},"x":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"a":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}}}},"h":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}},"v":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}},"s":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},"o":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}},"“":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Introduction.html","tf":0.010416666666666666}}}},"o":{"docs":{},"w":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}},"h":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"”":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"”":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}},"”":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"”":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}},"b":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"”":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}},"!":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}},"=":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}},"!":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.007159904534606206}},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"$":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"{":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"}":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"\"":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"u":{"docs":{},"n":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}},"\"":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"f":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"o":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"i":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"k":{"docs":{},"i":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"j":{"docs":{},"a":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"r":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"k":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"c":{"docs":{},"z":{"docs":{},"\"":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"ł":{"docs":{},"a":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}},"á":{"docs":{},"r":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}},"z":{"docs":{},"z":{"docs":{},"z":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}},"\"":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"$":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}},"e":{"docs":{},"w":{"docs":{},"\"":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0014677103718199608}}}}}}}}}},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}}}}}}},"{":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"}":{"docs":{},"\"":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},"\"":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"}":{"docs":{},"\"":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"}":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}}}},"(":{"2":{"docs":{},".":{"docs":{},".":{"1":{"0":{"0":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}},"e":{"2":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"docs":{}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.006666666666666667},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842}}}}}}}}}}}}}}},"f":{"docs":{},"/":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}}}},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568}}}}}}},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}}}}}}}},"t":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"a":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}}},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}},"i":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"d":{"docs":{},"d":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0040650406504065045}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}},"@":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211}},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}},"@":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"s":{"docs":{},"o":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}},"!":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.0029940119760479044}}}}}}}},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},"+":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.005610098176718092},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},"=":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.003913894324853229}}}},"/":{"docs":{},"/":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.014677103718199608},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.016830294530154277},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.021601016518424398},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.005568814638027049},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0036275695284159614}},".":{"docs":{},".":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0019569471624266144},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.007623888182973317},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.012287334593572778},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.010526315789473684}}}}},"*":{"docs":{},"*":{"docs":{},"*":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}},"*":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"*":{"docs":{},"/":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}}}},"=":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.02299412915851272},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.029453015427769985},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.01905972045743329},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.029045643153526972},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.008506616257088847},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.007894736842105263},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.017501988862370723},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.007255139056831923}},"=":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}},">":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0009784735812133072},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.005263157894736842},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0015910898965791568},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.008982035928143712}},"=":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}},"@":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.002386634844868735},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.007623888182973317}}}}}},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.005082592121982211}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0025412960609911056}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"y":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136}}}}}}}}}}}}},"_":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046}}}}}}}}}}}},"n":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.004149377593360996}}}}}}}},"’":{"docs":{},"v":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}},"{":{"4":{"docs":{},"=":{"docs":{},"k":{"docs":{},"i":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"}":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.0004892367906066536}}}}}}}}}}},"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.017123287671232876},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.028050490883590462},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.026683608640406607},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.016597510373443983},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.022684310018903593},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.013157894736842105},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.013524264120922832},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.04491017964071856},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.015719467956469165}}},"}":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","tf":0.01614481409001957},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.029453015427769985},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.026683608640406607},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","tf":0.016597510373443983},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.01984877126654064},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","tf":0.013333333333333334},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.013157894736842105},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.013524264120922832},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","tf":0.04491017964071856},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.015719467956469165}}},"%":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.004207573632538569}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.001402524544179523},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","tf":0.0012706480304955528}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","tf":0.002805049088359046},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}}},"?":{"docs":{},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.001890359168241966},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0031821797931583136},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},".":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.002631578947368421}}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}},".":{"docs":{},",":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}}}}}}}}}}}}}}}}},"`":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","tf":0.000945179584120983}}}}}}},"f":{"docs":{},"i":{"docs":{},"b":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},":":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","tf":0.007894736842105263}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","tf":0.0007955449482895784}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}},"t":{"docs":{"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"ref":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","tf":0.0020325203252032522}}}}}},"–":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Introduction.html","tf":0.00558659217877095}}}}}}}}},"&":{"docs":{},"&":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0024183796856106408}},",":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}},"‘":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"ref":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","tf":0.0012091898428053204}}}}}}}}}},"length":4653},"corpusTokens":["!","!!","!!,","!!.","!!:","!=","\"","\"$it","\"$name","\"${it.name}","\")","\"\\n\")","\"a\"","\"aaa\")","\"b\"","\"becaus","\"bill\"","\"blanc\"))","\"braun\"","\"c\"","\"cannot","\"cold\"","\"fabio\"","\"fail","\"hansen\"))","\"hot\"","\"kirill\"","\"maja\"","\"marcin\"","\"markiewicz\")","\"mild\"","\"moskała\"","\"moskała\")","\"márton\"","\"unnamed\"","\"zzz\"","$i","$n","$new\")","$old","$surname\"","$user\")","${it.result}\"","${it.surname},","${name.touppercase()}\")","${text.length}\")","%","&&","&&,","(!name.isnullorblank())","(!news.isnullorempty())","((i,","()","(2..100).tolist()","(@nonnul","(@nullabl","(@nullable,","(@nullable,@checkfornul","(after","(and","(assum","(balanc","(bi","(both","(degre","(elem","(except","(filereader,","(for","(fullnam","(fullname2","(getter","(hasvalue)","(i","(if/else,","(incorrectsign)","(item","(like","(limit","(list","(most","(n","(npe),","(numbers.isnotempty())","(part","(person","(printer","(programm","(reader","(safe","(so","(string)","(structure,","(t)","(tdd)","(that","(the","(thi","(though","(true)","(which",")","):","+","+=","...",".filter",".getboolean(from_notification_arg)",".jointostring(separ",".let(::bufferedinputstream)",".let(::objectinputstream)",".let(::print)",".let(::zipinputstream)",".readobject()","/*...*/","//","//***","//...","0","0\"","0)","0.0","1","1):","1..1000)","10","10,","1000","1000,","10:","11","11,","11:","12","12]","13","13,","14","14:","15","16","16:","17","17,","18","19","19,","2","2).","2,","2.","20","21","21:","22","23","23,","24","25","26","27","28","29","29,","29]","2:","3","3)","3,","30","305","305’","31","31,","32","33","34","35","36","37","37,","37:","38","39","3:","4","40","41","41,","41:","42","43","43,","44","45","46","47","47,","48","49","49:","4=/[:+/(,/,\"0/~i:1)|.])*.1,:]","4]","5","5,","50","51","52","53,","59,","5:","6","6,","61,","67,","6:","7","7,","71,","73,","79,","7:","8","8,","83,","89,","8:","9","9,","911","97]","9:",":","=","==",">",">=",">string):","?.,","?.let","?.let(view::showperson)","?:","?:,","?:.","@beforeeach","@checkfornull,","@nonnul","@notnul","@nullabl","@parametersarenonnullbydefault","@possiblynul","@test","@throws(insufficientfunds::class)","[","[1,","[2,","[]","[aaa","[fabio,","[fabio]","[x]","[zzz","]","_,","`fib","`stack","a,","aaa,","abc","abov","above,","absolut","abstract","absurdli","abus","abuse,","accept","access","accessor","accident","accident.","accidental.","account","account.","accumul","achiev","achieve.","acknowledg","action","active:","activity()","activity,","actual","actualelement:","ad","add","addit","addition","additionally,","address","address\")","adjust","adult.","advantag","advantages:","afraid","ag","again,","again.","against","agre","algorithm","alias","all,","all.","allow","alreadi","also,","alternatively,","although","alway","amaz","amazing.","ambiguity:","ambit","analyz","android","android.support.annotations)","androidx.annot","angri","anim","animal()","animal:","annot","annotation.","annotations?","announc","annoy","anoth","answer.","any()","anymor","anymore.","anyon","anyway.","anyway:","api","api).","api,","api.","apis.","apl","apl.","apl:","append","appli","applic","application.","approach","appropri","appropriately.","approv","ar","architectures.","are,","are.","are:","aren’t","arg(doctor_id_arg)","arg(from_notification_arg)","argument","argument.","arguments,","arguments.","arguments9.","argument’","around","array","arraylist()","arraylist,","arraylist.get(int).","arrays.","arrays.arraylist","art","art.","as:","ask","assert","assert(ret.s","assert.","assertequals(1,","assertequals(10,","assertequals(2,","assertequals(3,","assertequals(5,","assign","associ","assum","assumpt","assur","attent","autoclos","autocloseable.","autom","automat","automatically,","avoid","avoided.","awar","b","b)","b,","b.","b:","b?","back","bad","balanc","balance:","bank","bankaccount","base","baselin","basic","basket.","be","be.","becam","because:","befor","before,","begin","beginn","beginning,","behav","behavior","behavior.","behavior:","behind","believ","below","below.","best","better","better,","better.","between","big","bigger","biggest","bill]”","bit","blanc,","blanket","bloch).","block","block.","blocks,","blocks.","bodi","bodies).","boilerpl","book","book,","book.","boolean","boolean)","boolean):","boolean.","both","both:","bought","bound","braces,","brain","branch","branch.","braun","break","break.","bufferedreader(filereader(path))","bufferedreader(filereader(path)).us","bufferedreader,","bug","bugs:","build","builder.","bundl","bundle?)","busi","business,","buzz","buzz,","by:","c","c)","c++?","c,","c.","c:","cach","calcul","calculate()","calculate():","calculating...","call","call.","call:","called.","calls).","came","can:","capabl","captur","car","care","career","careful”","carfactori","case","case)","case,","cases,","cases.","cast","casted:","casting,","casting.","casting:","catch","caught","caught.","caus","certain","challeng","champion","chanc","chang","change).","change,","change.","changed,","changed:","changedress(person:","changing.","chapter","chapter,","charact","characterist","cheap","cheaper","check","check(isinitialized)","check(isopen)","check,","check.","check:","checkand","checking.","checknotnull(context)","checknotnull(token)","checknotnull,","checknotnull.","checks,","choic","choos","circumstances,","citizen.","clarifi","class","class,","class.","classes,","classif","classifi","clean","clear","clear).","clear.","clearli","clearly,","client","client.","close","closeabl","closer","closest","clusters,","clutter","cn","code","code).","code,","code.","code:","cognit","coincidence.","collect","collection,","collection.","collection:","collection?","collections.","collector","color.blu","color.r","color.yellow","color:","com.android.annot","combin","come","comfort","comment,","common","commonli","commun","community.","compar","compil","complain","complet","complete.","complete:","complex","complexities.","complic","complicated,","complicated:","complication.","componentdidmount","compos","composit","comprehend","comprehend.","comput","concaten","concentr","concept","conceptu","concis","concise.","concret","concurr","concurrentmodificationexcept","condit","conditions(effect","conditions.","confid","conflict","conflict,","conflict.","confusing.","connect","cons.","conscienti","consecut","consequences,","consequences.","consid","consist","constantli","construct","constructor","constructors,","contain","content","contests.","context","contract","contract,","contract.","control","controller!!.dosomething()","controller.dosomething()","controller:","convent","convinc","conway’","copi","copy.","copying.","core","coroutines,","coroutinescop","correct","correct.","correctli","correctly.","correctness.","correspond","cost","cost.","couldn’t","countcharactersinfile(path:","counterparts.","cours","cover","crash","crashes,","creat","created.","creation","creation,","creation.","criteria,","critic","cssparser),","curli","current","custom","d).max()!!","d:","danger","danger.","dangerous,","dangerous.","dao","dao:","data","data,","data.","david","day","day.","deal","deal.","debug","decid","declar","decor","deep","deeper","default","default,","default.","default_car","default_car:","defend","defens","defin","defined.","definit","definition.","degre","delay(10)","deleg","delegate,","delegate.","delegates,","delegates.notnul","delegates.notnull()","delegates.notnull.","delegates.observable(listof())","demand","denotable,","depend","deposit(depositamount:","depositamount","describ","description:","deserv","design","design,","design.","designed.","desir","destructur","detail","detected.","detekt","develop","developer.","developers).","developers,","developers.","developers:","development.","diagram","differ","difference?","direct","disadvantag","disaster.","disciplines.","discuss","distance.","dive","divis","doctoractivity:","doctorid","doctorid:","document","documentation,","documentation.","documented.","doesn’t","done","don’t","doubl","double)","doubts,","down","drawback","dress","dress)","dress.","dress:","driven","drop","dsl","dure","ea","each","early,","easi","easier","easili","easy.","eclips","edg","edu.umd.cs.findbugs.annotations)","effect","effici","efficiency)","efficient,","efficient.","eleg","element","element)","element.","elements,","elements.","elements:","elements`()","elimin","elvi","email","email,","email:","empti","empty.","empty:","enabl","encapsul","encourag","end","engineers.","enough.","ensur","entirely.","enum","equal","eratosthen","error","error(\"print","error,","error.","error:","errors,","errors.","errors.”","especi","essenti","establish","estim","etc.","evalu","even","eventu","everyon","everyone.","everyth","evolv","evolves.","exact","exampl","example,","example.","example:","examples,","examples:","except","exception()","exception.","exceptions.","exclam","execution.","exercis","exist","exist.","expect","expect:","expectations,","expected,","expected.","expens","experi","experienc","explain","explanation.","explicit","explicit,","explicit.","explicitli","exponenti","expos","exposit","express","expression.","expression:","expressions),","expressions:","expressiveness.","extend","extens","extern","extract","extrem","extreme,","f()","fact","fact,","factori","factorial(n:","factories,","factories:","fail","fails.","failur","failure(jsonparsingexception())","failure(v","failure)","failure,","fair","fall","fals","false”","familiar","far","fast","faster","featur","feature.","features.","feedback","feel","few","fewer","fiat126p()","fiat126p.","fib","fib(0))","fib(1))","fib(2))","fib(3))","fib(4))","fibonacci","fields.","fight","file","file(path).uselin","file,","file.","fileinputstream(\"/file.gz\")","files,","fill","filter","filternotnull.","filters.","final","final,","final.","finally,","find","find.","findbug","fine","first","first.","fix","fixed.","fizz","fizz()","flexibl","flow","focu","follow","following:","fool","forc","form","format,","format:","found","four","fowler,","francisco","free","freedom","freedom.","friendly.","fromnotif","fromnotification:","fruitless","fullnam","fullname(\"aaa\",","fullname2:","fullname:","fun","function","function).","function,","function.","function:","functions,","functions.","functions:","further.","futur","future,","future.","garbag","gave","gener","general,","generatesequence(2)","get","get()","get():","getnetworkservice(context)","getnews()","getordefault,","getornul","getornull,","getprinter()","getter","getter,","getter.","getuser()","getuserinfo():","getusername()","getusername():","getusers()","getvalu","getvalue()","give","given","givename()","go","goal","golf","good","good.","great","group","grow","guarante","guaranteed.","guard","hand","hand,","handl","handled,","handled.","hansen]","happen","happen.","happens,","happens.","happi","hard","hard,","harder","harm","hash","hashcode.","haskell.","hasn’t","have","have,","help","help.","helpful:","here","here”.","hesit","hidden","hide","hierarchi","highli","highlight","hire","history.","hold","honest:","hood","hood,","hope","hour","however,","human","idea","idiom","idiomat","idioms.","if(hasvalue)","if,","if/els","if/else,","ignored,","illeg","illegalargumentexcept","illegalstateexcept","imagin","immedi","immut","immutable,","immutable.","implement","implementation,","implementation.","implementations:","impli","implicit,","import","important,","important.","imposs","impossible.","improv","in.","incent","includ","incorrect","incorrect,","incorrect.","incorrectli","increas","index","indexoutofboundsexcept","indexoutofboundsexception.","indic","indicate.","individu","infer","inferred,","inferred:","infinit","infix","inform","information.","inherit","inhibit","init()","initi","initialized,","inlin","inputstream","insecur","insid","instanc","instance,","instance:","instead","instead,","instead.","instead?","int","int)","int):","int,","int.","int.max_value.","integer.","intellij","intent.extra","intent.extras.getint(doctor_id_arg)","interact","interfac","interface,","interface.","interface:","interfaces.","intern","internally.","internet","interoper","interpret","interrupt","introduc","introduct","invest","invok","invoked.","involved,","io","io.reactivex.annotations)","is,","is.","is:","isn’t","isn’t.","issu","it!!.filternotnull()","it,","it.","it.isadult","it.length","it.result","it10.","it:","item","item,","iter","iterable,","iterable.filt","iterable.firstornull(()","iterable.map","iterable.map(","iteration,","it’","j:","java","java,","java.","java.io.read","java.lang.unsupportedoperationexcept","java.new.socket","java.sql.connection,","java.util.abstractlist.add(abstractlist.java:108)","java.util.abstractlist.add(abstractlist.java:148)","java.util.scanner.","javaclass","javaclass().valu","javascript","javatest","javax","javax.annotation)","jetbrain","john","jordan","joshua","json","jsonparsingexcept","jsonparsingexception()","jsr","junior","junit","jvm","jvm,","keep","key","keyboard.","kind","know","knowledg","known","koltin","kotlin","kotlin).","kotlin,","kotlin.","kotlin/jvm,","kotlin?","kotlin’","lack","lambda","lambda,","lambdas.","languag","language,","language.","languages,","languages.","larg","largest","largestof()","largestof(a:","largestof(vararg","last","lateinit","later","later.","later:","latter","launch","lazi","lazili","lazily:","lead","leak","learn","led","left","legaci","length","less","let","let,","let.","let:","let’","level","li","librari","library,","library.","life","life=:[:+/(3","lifecycl","life”","like:","limit","line","line,","line.","lines.","lines.sumbi","list","list,","list.","list.add(4)","list.add(transformation(elem))","list.tomutablelist","list.tomutablelist()","list1","list1.add(1)","list1.plusassign(1)","list1:","list2","list2.plus(1)","list2:","list3","list:","list>","list?","listof","listof()","listof(1,","listof(1,2,3)","listof(a,","littl","live","load","load.","loadal","loadall():","local","local,","locat","lock","log","log(\"email","logic","lombok","lombok)","long","long,","longer","look","loop","loop,","loop.","lose","lost.","lot","loudli","made","main","main()","mainli","mainstream","maintainability.","maintained.","maja","make","malformat","manag","manage.","manage4.","mani","manual","manually.","map","maps,","marcin","mark","martin","match","materi","max","mayb","mean","meaning","meaningless","means.","mechan","mechanisms:","member","memory.","mention","messag","message,","message:","messages.","met,","met.","method","method.","middl","mind.","minim","minu","minut","misconcept","mismatch","miss","miss.","mistak","mistakes.","misuse.","misused,","mockk()","mode","mode.","model","modif","modifi","modification.","modified,","modify.","modify:","modul","module.","moment","money","month","more","more,","more.","moskała","mostli","move","much","multipl","multithread","multithreading,","multithreading.","mutability,","mutability.","mutabl","mutable,","mutable.","mutablecollection,","mutableiterable,","mutablelist","mutablelist)","mutablelist.add(4)","mutablelistof()","mutablelistof(1,2,3)","mutablemap","mutablemapof()","mutableset,","mutableus","mutableuser()","mutat","mutates,","mutation.","márton","n","naiv","name","name).","name,","name:","name?\")","name?.let","named\")","names)","names,","names.add(fullname(\"david\",","names.add(fullname(\"jordan\",","names.add(person)","names:","narrow","narrowest","nearli","necess","necessarili","need","need.","needed.","needless","neg","networkservic","networkservice.getdata","never","new","news.foreach","news:","next","next():","nicer","nobodi","nointernetconnection()","noise:","non","none","norm.","nosuchelementexcept","not.","notat","note","noth","nothing.","notic","notice.","notifi","notifyuser(it)","notnul","now","now,","now.","npe","npe.","null","null)","null,","null.","null:","null;","nullability,","nullability.","nullabl","nullable.","nulls:","nullwhen","num","num)","number","number,","number.","numbers,","numbers.","numbers.drop(1)","numbers.filt","numbers.first()","numbers:","numer","nums.max()!!","nums:","obj","object","object,","object.","object:","objects,","objects.","observ","obsolet","obtain","obvious,","occur","occur:","offens","offer","old,","omit","on","onc","once,","once.","oncreat","oncreate(savedinstancestate:","oncreate,","one,","one.","one:","ones.","only,","only.","open","open.","oper","operation.","operations,","operations.","operator,","operator.","operator:","operators.","opposit","optim","option","option,","option.","option:","options,","or,","orempti","org.eclipse.jdt.annotation)","org.jetbrains.annotations)","org.jetbrains.annotations.notnull;","orthogon","other","others,","otherwis","otherwise.","ourselves,","out","out,","outer","outfit","outputstream,","outsid","outside,","outside.","over","overal","overrid","overus","own.","p.","pack","pain","parallel","paramet","pars","part","particular","pass","past.","path)","pattern","pattern).","patterns.","pay","peopl","perfect","perform","perform.","person","person(v","person)","person,","person.email","person.isadult)","person.nam","person.outfit","person:","person?","person?.let","person?.takeif","personresult","personresult.value.ag","person’","perspective.","place","place,","place.","platform","platformtyp","platformtype()","pleasurable11.","plu","point","point,","point.","pointer","points.","polici","poorli","pop","pop(num:","popular","posit","position,","position.","positions,","positions`()","possibl","possible).","possible,","possible.","potenti","practic","preciou","predic","predict","predictable.","prefer","preferred.","prepar","present","present.","prevent","previou","price","primari","prime","prime.","prime:","primes.add(prime)","primes:","primit","primitive,","print","print(\"calculating...","print(\"us","print(a","print(abc)","print(buzz)","print(fizz)","print(it.name)","print(list)","print(list.size)","print(names)","print(num)","print(person","print(primes)","print(primes.take(10).tolist())","print(s)","print(user)","print(userrepository.loadall())","printer","printer!!.print()","printer.print()","printer:","printer?","printer?.nam","printer?.print()","printername1","printername2","printername3","println(\"hello","println(\"nam","println(\"what","println(fullname)","println(fullname.length)","println(fullname2.length)","println(value.length)","printname()","prioriti","privat","private:","pro","probabl","problem","problem.","problemat","problematic,","problematic:","process","process(user:","produc","produce()","produce():","product","production,","production.","program","program.","programm","programmers,","programmers.","programming.","programs.everi","prohibit","project","projects,","projects.","promot","prone","propag","propagate.","propagated.","proper","properli","properly.","properti","properties,","properties.","property,","property.","property:","protect","provid","psycholog","public","pure","purpos","puzzl","python.","quicker","quickly.","quietli","quit","r","range,","range.","rare","ratio","react","react.component.","reactivex","read","read.","readability,","readabl","readable.","reader","reader.close()","reader.linesequence().sumbi","reader.us","reading,","readline()","real","reality:","realiz","realli","reason","reason.","reasoning,","reasoning.","reasons,","receiv","recip","recogn","recognizable.","recommend","reduc","refactor","refactored.","refactoring:","refactorization,","refer","referenc","references):","reflect","region","regression.","reinvent","relat","relationship","reliabl","reliable.","remain","rememb","remembered.","remov","removed.","repeat","repetit","replac","repo","repo.getusername()","repo.us","repo:","repoimpl()","repoimpl:","repres","request","requir","require(isvalidemail(user.email))","require(n","require(num","require(person.email","require(person.outfit","require(points.isnotempty())","require(value)","require(value:","require,","require.","required.","requirement.\"","requirenotnul","requirenotnull(person.email)","requirenotnull(user.email)","requirenotnull(user.name)","requirenotnull,","rescue.","resourc","resource,","resources,","respect","respons","rest","restrict","result","result()","result,","result.","result:","ret","ret.size)","return","returned.","returns()","returns,","reus","reusabl","reused.","review","rewritten.","right","right.","risk","robert","rule","rules.","run","run,","runtim","s","safe","safe.","safely,","safer","safer,","safest","safeti","safety,","safety.","sake","same","same.","san","satisfi","satisfied,","satisfied.","satisfied:","save","saw","scare","scari","science.","scope","scope,","scope.","scream","seal","search","second","section","secur","see","see,","seem","seen","self","send","sendemail(person:","sendemail(user:","senior)","sens","sent,","separ","separately,","sequenc","sequence.","seriou","serv","server,","set","set,","set.","set?,","setter","setter).","setter.","setters)","setting:","shadow","share","short","short,","shorten","shortened:","short”.","should,","shouldn’t","show","show(data!!,","showerror","shown","showperson","side","side,","side.","side:","siev","signific","silenc","similar","similarli","similarly,","simpl","simple,","simple:","simpler","simpler.","simplest","simplifi","singl","site,","site:","situat","situation,","situation.","situations.","situations:","size","skill","slightli","slower,","small","smaller","smart","smell.","snippet","snippet⁶.","so.","softwar","solid","solut","solved:","someobject","someon","someth","sometim","sometimes,","soon","sooner","sort","sorted.","sortedset","sound","sourc","sparingli","speak(text:","special","specif","specifi","specific.","specified:","spend","spent","spot","stabil","stability.","stable.","stack","stack(20)","stack.pop(10)","stacktest","standard","start","started.","state","state,","state.","state:","statedtyp","statedtype()","statement","states.","static","stay","stdlib.","step","step,","step.","still","still,","stop","stopped:","storedus","storedusers:","storedusers[4]","strang","string","string!.","string)","string):","string,","string.","string.and(s:","string.invoke(f:","string.readobject():","string.readobjectornull():","string.tointornull()","string?","string?)","string?.","strong","structur","structures,","structures.","student","style.","success","success(result)","success(v","such","suffici","sufficient.","suggest","suggestions,","suggestions.","suitabl","sum","summari","super.oncreate(savedinstancestate)","superclass","supertype:","support","support.","supported,","supported.","suppos","sure","surely,","surnam","surname)","surname:","surname=moskała)","surpris","suspect","suspend","sword.","synchron","synchronization,","synchronized(lock)","syntax","system","system.","systems.","system”","t","t)","t?","tabl","table,","tag","take","takeif,","talk","teach","team","teams.","techniqu","tediou","tempt","ten","tend","tendenc","term","term,","terribl","test","test()","test.","testable.","tested,","tester","testing,","testing.","tests,","tests.","tests:","text","text,","text:","th","thank","that,","that.","that’","them).","them,","them.","themselv","then.","there,","there.","there:","therefor","therefore,","there’","they’v","thing","things.","think","third","this!","this)","this,","this:","those","though","though,","thought","thread","thread.","thread.sleep(10)","thread.sleep(1000)","thread.sleep(5000)","throughout","throw","throw,","throw.","throwable)","throwable:","thrown","thrown.","thu","tighten","time","time).","time,","to:","togeth","together,","tool","top","topic","total","touch","track","tradition","train","trait,","transformation:","translat","treat","treeset()","tri","trouble.","true","true,","true.","truli","trust","turn,","two","two.","type","type,","type.","types,","types.","types:","typic","uiviewcontroller,","ultim","unbelievable,","unchecked.","uncommon","under","underli","understand","understand.","understood","understood,","undesirable.","unexpect","uniniti","unintent","union","unit","univers","unknown","unless","unlik","unnecessari","unpack","unsaf","unsafely,","unsupportedoperationexcept","until","up","upcast","updateweather(degrees:","upset","us","us,","us.","us:","usag","use,","use.","use:","used,","used.","usefunct","uselin","user","user!","user(","user(\"maja\",","user()","user(name,","user(name=maja,","user(v","user)","user,","user.copy()","user.copy(surnam","user.withsurname(\"moskała\")","user1","user2","user2:","user3","user3:","user:","user?","usercontrol","usercontroller(dao!!)","usercontroller(dao)","usercontroller?","usercontrollertest","userdao","userdao?","userdata","userdata!!)","userhold","userinfo","userrepo","userrepo()","userrepo().groupedus","userrepo().groupedusers!!.map","userrepo().us","userrepo().users!!.filternotnull()","userrepositori","userrepository()","userrepository.loadall()","users.","users.indices)","users.withindex())","users:","users[i]","usertext.readobject()","usertext.readobjectornull()?.ag","user’","using:","usual","val","validateemail(email)","validateemail(email:","validateemail(person.email)","valu","value)","value,","value.","value:","values.","var","var.","var:","variabl","variable).","variable:","variables,","variables.","variable’","varianc","variant","varieti","variou","veri","view","view.","view.hideprogress()","view.hideprogresswithsuccess()","view.showerror()","view.showperson(it)","view.showperson(person)","view::showperson).","viewdidappear","violat","visibl","visible.","want","want.","warning:","way","way,","way.","way?","ways.","ways:","websit","weeks,","well","well!","well,","well.","we’ll","we’r","we’v","whatev","wheel.","when(personresult)","when,","whenev","wherea","wherev","whether","whole","why,","wide","wider","wise","wisely.","with,","withdraw(withdrawamount:","without","withsurnam","withsurname(surname:","wonder","won’t","words,","work","work.","works.","works:","workshop","world","world),","world.","worst","wouldn’t","wrap","write","write,","writing.","written","wrong","wrong,","wrong.","wrongli","yang.","year","yield","yield(prime)","yin","yourself,","you’v","zebra()","zebra:","zh","{","{4=kirill}","}","–martin","‘lambda","“be","“creative”","“game","“hack","“main”","“optimized”","“optimize”","“there","“unpack”","“whi","“wow,","中文翻译","在线阅读地址","当前进度：英文原文搬运中"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Effective-Kotlin-zh-CN\nEffective Kotlin 中文翻译\n在线阅读地址\n当前进度：英文原文搬运中\n\nPart 1 Good Code\nChapter 1 Safety\n[x] Introduction\n[x] Item 1 Limit Mutability\n[x] Item 2 Minimize The Scope Of Variables\n[x] Item 3 Eliminate Platform Types As Soon As Possible\n[x] Item 4 Do Not Expose Inferred Types\n[x] Item 5 Specify Your Expectations On Arguments And State\n[x] Item 6 Prefer Standard Errors To Custom Ones\n[x] Item 7 Prefer Null Or Failure Result When The Lack Of Result Is Possible\n[x] Item 8 Handle Nulls Properly\n[ ] Item 9 Close Resources With Use\n[ ] Item 10 Write Unit Tests\n\n\nChapter 2 Readability\n[ ] Introduction\n[ ] Item 11 Design For Readability\n[ ] Item 12 Operator Meaning Should Be Consistent With Its Function Name\n[ ] Item 13 Avoid Returning Or Operating On Unit\n[ ] Item 14 Specify The Variable Type When It Is Not Clear\n[ ] Item 15 Consider Referencing Receivers Explicitly\n[ ] Item 16 Properties Should Represent State Not Behavior\n[ ] Item 17 Consider Naming Arguments\n[ ] Item 18 Respect Coding Conventions\n\n\n\n\nPart 2 Code Design\nChapter 3 Reusability\n[ ] Introduction\n[ ] Item 19 Do Not Repeat Knowledge\n[ ] Item 20 Do Not Repeat Common Algorithms\n[ ] Item 21 Use Property Delegation To Extract Common Property Patterns\n[ ] Item 22 Use Generics When Implementing Common Algorithms\n[ ] Item 23 Avoid Shadowing Type Parameters\n[ ] Item 24 Consider Variance For Generic Types\n[ ] Item 25 Reuse Between Different Platforms By Extracting Common Modules\n\n\nChapter 4 Abstraction Design\n[ ] Introduction\n[ ] Item 26 Each Function Should Be Written In Terms Of A Single Level Of Abstraction\n[ ] Item 27 Use Abstraction To Protect Code Against Changes\n[ ] Item 28 Specify API Stability\n[ ] Item 29 Consider Wrapping External API\n[ ] Item 30 Minimize Elements Visibility\n[ ] Item 31 Define Contract With Documentation\n[ ] Item 32 Respect Abstraction Contracts\n\n\nChapter 5 Object Creation\n[ ] Introduction\n[ ] Item 33 Consider Factory Functions Instead Of Constructors\n[ ] Item 34 Consider A Primary Constructor With Named Optional Arguments\n[ ] Item 35 Consider Defining A DSL For Complex Object Creation\n\n\nChapter 6 Class Design\n[ ] Introduction\n[ ] Item 36 Prefer Composition Over Inheritance\n[ ] Item 37 Use The Data Modifier To Represent A Bundle Of Data\n[ ] Item 38 Use Function Types Instead Of Interfaces To Pass Operations And Actions\n[ ] Item 39 Prefer Class Hierarchies To Tagged Classes\n[ ] Item 40 Respect The Contract Of Equals\n[ ] Item 41 Respect The Contract Of Hash Code\n[ ] Item 42 Respect The Contract Of Compare To\n[ ] Item 43 Consider Extracting Non Essential Parts Of Your API Into Extensions\n[ ] Item 44 Avoid Member Extensions\n\n\n\n\nPart 3 Efficiency\nChapter 7 Make It Cheap\n[ ] Introduction\n[ ] Item 45 Avoid Unnecessary Object Creation\n[ ] Item 46 Use Inline Modifier For Functions With Parameters Of Functional Types\n[ ] Item 47 Consider Using Inline Classes\n[ ] Item 48 Eliminate Obsolete Object References\n\n\nChapter 8 Efficient Collection Processing\n[ ] Introduction\n[ ] Item 49 Prefer Sequence For Big Collections With More Than One Processing Step\n[ ] Item 50 Limit The Number Of Operations\n[ ] Item 51 Consider Arrays With Primitives For Performance Critical Processing\n[ ] Item 52 Consider Using Mutable Collections\n\n\n\n\n\n"},"Part 1 Good code/Chapter 1 Safety/Introduction.html":{"url":"Part 1 Good code/Chapter 1 Safety/Introduction.html","title":"Introduction","keywords":"","body":"“Why do we decide to use Kotlin in our projects instead of Java, JavaScript or C++? Developers are often bought by conciseness or amazing Kotlin features. For business, as I found out, the truly convincing argument is Kotlin safety - how its design eliminates potential application errors. You don’t need to have any experience with development to get upset when the application you use crashes, or when there is an error on a website that does not let you check out after you spent an hour collecting products into a basket. Having fewer crashes makes the lives of both users and developers better, and it provides significant business value.\nSafety is important for us, and Kotlin is a really safe language, but it still needs developer support to be truly safe. In this chapter, we’ll talk about the most important best practices for safety in Kotlin. We’ll see how Kotlin features promote safety, and how we can use them properly. The general purpose of every item in this chapter is to produce code that is less prone to errors.”\n"},"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html":{"url":"Part 1 Good code/Chapter 1 Safety/Item 1 Limit mutability.html","title":"Item 1 Limit Mutability","keywords":"","body":"In Kotlin, we design programs in modules and each of them is composed of different kinds of elements such as classes, objects, functions, type aliases and top-level properties. Some of those elements can hold state, for instance by having read-write property var or by composing a mutable object:\nvar a = 10\nval list: MutableList = mutableListOf()\n\nWhen an element holds state, the way it behaves depends not only on how you use it, but also on its history. A typical example of a class with a state is a bank account that has some money balance:\n class BankAccount {\n    var balance = 0.0\n       private set\n\n    fun deposit(depositAmount: Double) {\n        balance += depositAmount\n    }\n\n    @Throws(InsufficientFunds::class)\n    fun withdraw(withdrawAmount: Double) {\n        if (balance \nHere BankAccount has a state that represents how much money is present on that account. Holding state is a double-edged sword. On one hand it is very useful because it makes it possible to represent elements changing over time, but on the other hand state management is hard, because:\n\nIt is harder to understand and debug a program with many mutating points. The relationship between these mutations needs to be understood, and it is harder to track how they changed when there are more of them. A class with many mutating points that depend on each other is often really hard to understand and to modify. It is especially problematic in case of unexpected situations or errors.\n\nMutability makes it harder to reason about the code. State of immutable element is clear. Mutable state is much harder to comprehend. It is harder to reason what is its value as it might change at any point and just because we checked in some moment it doesn’t mean it is still the same.\n\nIt requires proper synchronization in multithreaded programs.Every mutation is a potential conflict.\n\nMutable elements are harder to test. We need to test every possible state, and the more mutability, the more states there are to test. What is more, the number of states we need to test generally grows exponentially with the number of mutation points in the same object or file, as we need to test all different combinations of possible states.\n\nWhen state mutates, often some other classes need to be notified about this change. For instance, when we add a mutable element to a sorted list, once the element is changed, we need to sort this list again.\n\nProblems with state consistency and the growing complexity of the project with more mutation points are familiar for developers working in bigger teams. Let’s see an example of how hard it is to manage shared state. Take a look at the below snippet⁶. It shows multiple threads trying to modify the same property, however because of conflicts some of those operations will be lost.\n var num = 0\n for (i in 1..1000) {\n    thread {\n        Thread.sleep(10)\n        num += 1\n    }\n }\n Thread.sleep(5000)\n print(num) // Very unlikely to be 1000\n // Every time a different number\n\nWhen we use Kotlin coroutines, there are less conflicts because less threads are involved, but they still occur:\nsuspend fun main() {\n    var num = 0\n    coroutineScope {\n        for (i in 1..1000) {\n            launch {\n                delay(10)\n                num += 1\n            }\n        }\n    }\n    print(num) // Every time a different number\n}\n\nIn real-life projects, we generally cannot just lose some operations, and so we need to implement proper synchronization like the one presented below. Although implementing proper synchronization is hard, and the more mutation points we have, the harder it is. Limiting mutability does help.\n val lock = Any()\n var num = 0\n for (i in 1..1000) {\n    thread {\n        Thread.sleep(10)\n        synchronized(lock) {\n            num += 1\n        }\n    }\n }\n Thread.sleep(1000)\n print(num) // 1000\n\nThe drawbacks of mutability are so numerous that there are languages that do not allow state mutation at all. These are purely functional languages. One well-known example is Haskell. Such languages are rarely used for mainstream development though, since it’s very hard to do programming with so limited mutability. Mutating state is a very useful way to represent the state of real-world systems. I recommend using mutability, but do it sparingly and wisely decide where our mutating points should be. The good news is that Kotlin supports limiting mutability well.\nLimiting mutability in Kotlin\nKotlin is designed to support limiting mutability. It is easy to make immutable objects or to keep properties immutable. It is a result of many features and characteristics of this language, but the most important ones are:\n\nRead-only properties val\n\nSeparation between mutable and read-only collections\n\ncopy in data classes\n\n\nLet’s discuss them one by one.\nRead-only properties val\nIn Kotlin we can make each property read-only val (like value) or read-write var (like variable). Read-only properties val do not allow setting:\nval a = 10\na = 20 // ERROR\n\nNotice though that read-only properties are not necessarily immutable nor final. A read-only property can hold a mutable object:\nval list = mutableListOf(1,2,3) \nlist.add(4)\n\nprint(list) // [1, 2, 3, 4]\n\nA read-only property can also be defined using a custom getter that might depend on another property:\nvar name: String = \"Marcin\"\nvar surname: String = \"Moskała\"\nval fullName \n    get() = \"$name $surname\"\n\nfun main() {\n   println(fullName) // Marcin Moskała\n   name = \"Maja\"\n   println(fullName) // Maja Moskała\n}\n\nNotice that it is possible because when we define a custom getter, it will be called every time we ask for the value.\n fun calculate(): Int {\n    print(\"Calculating... \")\n    return 42\n }\n\n val fizz = calculate() // Calculating...\n val buzz\n    get() = calculate()\n\n fun main() {\n    print(fizz) // 42\n    print(fizz) // 42\n    print(buzz) // Calculating... 42\n    print(buzz) // Calculating... 42\n }\n\nThis trait, that properties in Kotlin are encapsulated by default and they can have custom accessors (getters and setters) is very important in Kotlin because it gives us flexibility when we change or define our API. It will be described in detail in Item 16: Properties should represent state, not behavior. The core idea though is that val do not offer mutation points because it is only a getter under the hood when var is both getter and setter. That’s why we can override val with var:\ninterface Element {\n   val active: Boolean\n}\n\nclass ActualElement: Element {\n   override var active: Boolean = false\n}\n\nValues of read-only properties val can change, but such properties do not offer a mutation point which is the main source of problems when we need to synchronize or reason about a program. This is why we generally prefer val over var.\nAlthough remember that val doesn’t mean immutable. It can be defined by getter or delegate. This fact gives us more freedom to change. Though when we don’t need that, final properties should be preferred. It is easier to reason about them as they have the state stated next to their definition. They are also better supported in Kotlin. For instance, they can be smart-casted:\nval name: String? = \"Márton\"\nval surname: String = \"Braun\"\n\nval fullName: String?\n   get() = name?.let { \"$it $surname\" }\n\nval fullName2: String? = name?.let { \"$it $surname\" }\n\nfun main() {\n   if (fullName != null) {\n       println(fullName.length) // ERROR\n   }\n\n   if (fullName2 != null) {\n       println(fullName2.length) // Márton Braun\n   }\n}\n\nSmart cast is impossible for fullName because it is defined using getter, so it might give a different value during check and different later during use (for instance, if some other thread would set name). Non-local properties can be smart-casted only when they are final and do not have custom getter.\nSeparation between mutable and read-only collections\nSimilarly, as Kotlin separates read-write and read-only properties, Kotlin separates read-write and read-only collections. This is achieved thanks to the way the hierarchy of collections was designed. Take a look at the diagram presenting collections hierarchy in Kotlin. On the left side, you can see the Iterable, Collection, Set, and List interfaces that are read-only. This means that they do not have any methods that would allow modification. On the right side, you can see the MutableIterable, MutableCollection, MutableSet, and MutableList interfaces that represent mutable collections. Notice that each mutable interface extends the corresponding read-only interface, and adds methods that allow mutation. This is similar to how properties work. A read-only property means just a getter, while a read-write property means both a getter and a setter.\n\nRead-only collections are not necessarily immutable. Very often they are mutable, but they cannot be mutated because they are hidden behind read-only interfaces. For instance, the Iterable.map and Iterable.filter functions return ArrayList, which is a mutable list, as a List, which is a read-only interface. In the below snippet you can see a simplified implementation of Iterable.map from stdlib.\ninline fun  Iterable.map(\n   transformation: (T) -> R\n): List {\n   val list = ArrayList()\n   for (elem in this) {\n       list.add(transformation(elem))\n   }\n   return list\n}\n\nThe design choice to make these collection interfaces read-only instead of truly immutable is very important. It gives us much more freedom. Under the hood, any actual collection can be returned as long as it satisfies the interface. Therefore, we can use platform-specific collections.\nThe safety of this approach is close to the one achieved from having immutable collections. The only risk is when a developer tries to “hack the system” and performs down-casting. This is something that should never be allowed in Kotlin projects. We should be able to trust that when we return a list as read-only, it will be used only to read it. This is part of the contract. More about it on Part 2 of this book.\nDown-casting collections is not only breaking their contract and depending on implementation instead of abstraction as we should, but it is also insecure and can lead to surprising consequences. Take a look at this code:\nval list = listOf(1,2,3)\n\n// DON’T DO THIS!\nif (list is MutableList) {\n   list.add(4)\n}\n\nThe result of this operation is platform-specific. On the JVM listOf returns an instance of Arrays.ArrayList that implements Java List interface. This Java List interface has methods like add or set, and so it translates to the Kotlin MutableList interface. However, Arrays.ArrayList does not implement some of those operations. This is why the result of the above code is the following:\nException in thread “main” java.lang.UnsupportedOperationException\nat java.util.AbstractList.add(AbstractList.java:148)\nat java.util.AbstractList.add(AbstractList.java:108)\n\nThough there is no guarantee how this will behave in a year from now. Underlying collections might change. They might be replaced with truly immutable collections implemented in Kotlin and not implementing MutableList at all. Nothing is guaranteed. This is why down-casting read-only collections to mutable should never take place in Kotlin. If you need to change from read-only to mutable, you should use List.toMutableList function, which creates a copy that you can then modify:\nval list = listOf(1, 2, 3)\n\nval mutableList = list.toMutableList()\nmutableList.add(4)\n\nThis way does not break any contract, and it is also safer for us as we can feel safe that when we expose something as List it won’t be modified from outside.\nCopy in data classes\nThere are many reasons to prefer immutable objects - objects that do not change their internal state, like String or Int. In addition to the already named reasons why we generally prefer less mutability, immutable objects have their own advantages:\n\nThey are easier to reason about since their state stays the same once they are created.\nImmutability makes it easier to parallelize the program as there are no conflicts among shared objects.\nReferences to immutable objects can be cached as they are not going to change.\nWe do not need to make defensive copies on immutable objects. When we do copy immutable objects, we do not need to make it a deep copy.\nImmutable objects are the perfect material to construct other objects. Both mutable and immutable. We can still decide where mutability takes place, and it is easier to operate on immutable objects.\nWe can add them to set or use them as keys in maps, in opposition to mutable objects that shouldn’t be used this way. This is because both those collections use hash table under the hood in Kotlin/JVM, and when we modify elements already classified to a hash table, its classification might not be correct anymore and we won’t be able to find it. This problem will be described in detail in Item 41: Respect the contract of hashCode. We have a similar issue when a collection is sorted.\n\nval names: SortedSet = TreeSet()\nval person = FullName(\"AAA\", \"AAA\")\nnames.add(person)\nnames.add(FullName(\"Jordan\", \"Hansen\"))\nnames.add(FullName(\"David\", \"Blanc\"))\n\nprint(s) // [AAA AAA, David Blanc, Jordan Hansen]\nprint(person in names) // true\n\nperson.name = \"ZZZ\"\nprint(names) // [ZZZ AAA, David Blanc, Jordan Hansen]\nprint(person in names) // false”\n\nAt the last check, collection returned false even though that person is in this set. It couldn’t be found because it is in an incorrect position.\nAs you can see, mutable objects are more dangerous and less predictable. On the other hand, the biggest problem of immutable objects is that data sometimes needs to change. The solution is that the immutable objects should have methods that produce an object after some change. For instance, Int is immutable, and it has many methods like plus or minus that do not modify it but instead return a new Int after this operation. Iterable is read-only, and collection processing functions like map or filter do not modify it, but instead return a new collection. The same can be applied to our immutable objects. For instance, let’s say that we have an immutable class User and we need to allow its surname to change. We can support it with a withSurname method that produces a copy with a particular property changed:\nclass User(\n   val name: String,\n   val surname: String\n) {\n   fun withSurname(surname: String) = User(name, surname)\n}\n\nvar user = User(\"Maja\", \"Markiewicz\")\nuser = user.withSurname(\"Moskała\")\nprint(user) // User(name=Maja, surname=Moskała)\n\nWriting such functions is possible, but also tedious if we need one for every property. Here comes the data modifier to the rescue. One of the methods it generates is copy. It creates a new instance where all primary constructor properties are the same as in the previous one by default. New values can be specified as well. copy together with other methods generated by data modifier are described in detail in Item 37: Use data modifier to represent a bundle of data. Here is a simple example showing how it works:\ndata class User(\n   val name: String,\n   val surname: String\n)\n\nvar user = User(\"Maja\", \"Markiewicz\")\nuser = user.copy(surname = \"Moskała\")\nprint(user) // User(name=Maja, surname=Moskała)\n\nThis is an elegant and universal solution that supports making data model classes immutable. Surely, this way is less efficient than just using a mutable object instead, but it has all described advantages of immutable objects and should be preferred by default.\nDifferent kinds of mutation points\nLet’s say that we need to represent a mutating list. There are two ways we can achieve that. Either by using a mutable collection or by using read-write property var:\nval list1: MutableList = mutableListOf() \nvar list2: List = listOf()\n\nBoth properties can be modified, but in different ways:\nlist1.add(1) \nlist2 = list2 + 1\n\nBoth of these ways can be replaced with the plus-assign operator as well, but each of them is translated into a different behavior:\nlist1 += 1 // Translates to list1.plusAssign(1) \nlist2 += 1 // Translates to list2 = list2.plus(1)\n\nBoth those ways are correct and they both have their pros and cons. They both have a single mutating point, but it is located in a different place. In the first one mutation takes place on the concrete list implementation. We might depend on the fact that it has proper synchronization in case of multithreading, but such an assumption is also dangerous since it is not really guaranteed. In the second one, we need to implement the synchronization ourselves, but the overall safety is better because the mutating point is only a single property. Though, in case of a lack of synchronization, remember that we can still lose some elements:\nar list = listOf()\nfor (i in 1..1000) {\n   thread {\n       list = list + i\n   }\n}\nThread.sleep(1000)\nprint(list.size) // Very unlikely to be 1000, \n// every time a different number, like for instance 911\n\nUsing a mutable property instead of a mutable list allows us to track how this property changes when we define a custom setter or using a delegate (which is using a custom setter). For instance, when we use an observable delegate, we can log every change of a list:\nvar names by Delegates.observable(listOf()) { _, old, new ->\n   println(\"Names changed from $old to $new\")\n}\n\nnames += \"Fabio\" \n// Names changed from [] to [Fabio]\nnames += \"Bill\"   \n// Names changed from [Fabio] to [Fabio, Bill]”\n\nTo make this possible for a mutable collection, we would need a special observable implementation of the collection. For read-only collections on mutable properties, it is also easier to control how they change - there is only a setter instead of multiple methods mutating this object, and we can make it private:\nvar announcements = listOf()\n   private set\n\nIn short, using mutable collections is a slightly faster option, but using a mutable property instead gives us more control over how the object is changing.\nNotice that the worst solution is to have both a mutating property and a mutable collection:\n// Don’t do that\nvar list3 = mutableListOf()\n\nWe would need to synchronize both ways it can mutate (by property change and by internal state change). Also, changing it using plus-assign is impossible because of ambiguity:\n\nThe general rule is that one should not create unnecessary ways to mutate state. Every way to mutate state is a cost. It needs to be understood and maintained. We prefer to limit mutability.\nDo not leak mutation points\nIt is an especially dangerous situation when we expose a mutable object that makes up state. Take a look at this example:\ndata class User(val name: String)\n\nclass UserRepository {\n   private val storedUsers: MutableMap = \n       mutableMapOf()\n\n   fun loadAll(): MutableMap {\n       return storedUsers\n   }\n\n   //...\n}\n\nOne could use loadAll to modify UserRepository private state:\nval userRepository = UserRepository()\n\nval storedUsers = userRepository.loadAll()\nstoredUsers[4] = \"Kirill\"\n//...\n\nprint(userRepository.loadAll()) // {4=Kirill}\n\nIt is especially dangerous when such modifications are accidental. There are two ways how we can deal with that. The first one is copying returned mutable objects. We call that defensive copying. This can be a useful technique when we deal with a standard objects and here copy generated by data modifier can be really helpful:\nclass UserHolder {\n    private val user: MutableUser()\n\n    fun get(): MutableUser {\n        return user.copy()\n    }\n\n    //...\n}\n\nThough whenever possible we prefer limiting mutability, and for collections we can do that by upcasting those objects to their read-only supertype:\ndata class User(val name: String)\n\nclass UserRepository {\n   private val storedUsers: MutableMap = \n       mutableMapOf()\n\n   fun loadAll(): Map {\n       return storedUsers\n   }\n\n   //...\n}\n\nSummary\nIn this chapter we’ve learned why it is important to limit mutability and to prefer immutable objects. We’ve seen that Kotlin gives us a lot of tools that support limiting mutability. We should use them to limit mutation points. Simple rules are:\n\nPrefer val over var.\nPrefer an immutable property over a mutable one.\nPrefer objects and classes that are immutable over mutable.\nIf you need them to change, consider making them immutable data classes, and using copy.\nWhen you hold state, prefer read-only over mutable collections.\nDesign your mutation points wisely and do not produce unnecessary ones.\nDo not expose mutable objects.\n\nThere are some exceptions to these rules. Sometimes we prefer a mutable object because they are more efficient. Such optimizations should be preferred only in the performance critical parts of our code (Part 3: Efficiency) and when we use them, we need to remember that mutability requires more attention when we prepare it for multithreading. The baseline is that we should limit mutability.\n"},"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html":{"url":"Part 1 Good code/Chapter 1 Safety/Item 2 Minimize the scope of variables.html","title":"Item 2 Minimize The Scope Of Variables","keywords":"","body":"When we define a state, we prefer to tighten the scope of variables and properties by:\n\nUsing local variables instead of properties\nUsing variables in the narrowest scope possible, so for instance, if a variable is used only inside a loop, defining it inside this loop\n\nThe scope of an element is the region of a computer program where the element is visible. In Kotlin, the scope is nearly always created by curly braces, and we can generally access elements from the outer scope. Take a look at this example:\nval a = 1\nfun fizz() {\n   val b = 2\n   print(a + b)\n}\nval buzz = {\n   val c = 3\n   print(a + c)\n}\n// Here we can see a, but not b nor c\n\nIn the above example, in the scope of the functions fizz and buzz, we can access variables from the outer scope. However, in the outer scope, we cannot access variables defined in those functions. Here is an example of how limiting variable scope might look like:\n// Bad\nvar user: User\nfor (i in users.indices) {\n   user = users[i]\n   print(\"User at $i is $user\")\n}\n\n// Better\nfor (i in users.indices) {\n   val user = users[i]\n   print(\"User at $i is $user\")\n}\n\n// Same variables scope, nicer syntax\nfor ((i, user) in users.withIndex()) {\n   print(\"User at $i is $user\")\n}\n\nIn the first example, the user variable is accessible not only in the scope of the for-loop, but also outside of it. In the second and third examples, we limit the scope of the user variable concretely to the scope of the for-loop.\nSimilarly, we might have many scopes inside scopes (most likely created by lambda expressions inside lambda expressions), and it is better to define variables in as narrow scope as possible.\nThere are many reasons why we prefer it this way, but the most important one is: When we tighten a variable’s scope, it is easier to keep our programs simple to track and manage. When we analyze code, we need to think about what elements are there at this point. The more elements there are to deal with, the harder it is to do programming. The simpler your application is, the less likely it will be to break. This is a similar reason to why we prefer immutable properties or objects over their mutable counterparts.\nThinking about mutable properties, it is easier to track how they change when they can only be modified in a smaller scope. It is easier to reason about them and change their behavior.\nAnother problem is that variables with a wider scope might be overused by another developer. For instance, one could reason that if a variable is used to assign the next elements in an iteration, the last element in the list should remain in that variable once the loop is complete. Such reasoning could lead to terrible abuse, like using this variable after the iteration to do something with the last element. It would be really bad because another developer trying to understand what value is there would need to understand the whole reasoning. This would be a needless complication.\nWhether a variable is read-only or read-write, we always prefer a variable to be initialized when it is defined. Do not force a developer to look where it was defined. This can be supported with control structures such as if, when, try-catch or the Elvis operator used as expressions:\n // Bad\nval user: User\nif (hasValue) {\n   user = getValue()\n} else {\n   user = User()\n}\n\n// Better\nval user: User = if(hasValue) {\n   getValue()\n} else {\n   User()\n}\n\nIf we need to set-up multiple properties, destructuring declarations can help us:\n// Bad\nfun updateWeather(degrees: Int) {\n   val description: String\n   val color: Int\n   if (degrees  \"cold\" to Color.BLUE\n       degrees  \"mild\" to Color.YELLOW\n       else -> \"hot\" to Color.RED\n   }\n   // ...\n}\n\nFinally, too wide variable scope can be dangerous. Let’s describe one common danger.\nCapturing\nWhen I teach about Kotlin coroutines, one of my exercises is to implement the Sieve of Eratosthenes to find prime numbers using a sequence builder. The algorithm is conceptually simple:\n\nWe take a list of numbers starting from 2.\n\nWe take the first one. It is a prime number.\n\nFrom the rest of the numbers, we remove the first one and we filter out all the numbers that are divisible by this prime number.\n\n\nA very simple implementation of this algorithm looks like this:\nvar numbers = (2..100).toList()\nval primes = mutableListOf()\nwhile (numbers.isNotEmpty()) {\n   val prime = numbers.first()\n   primes.add(prime)\n   numbers = numbers.filter { it % prime != 0 }\n}\nprint(primes) // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, \n// 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n\nThe challenge is to let it produce a potentially infinite sequence of prime numbers. If you want to challenge yourself, stop now and try to implement it.\nThis is what the solution could look like:\nval primes: Sequence = sequence {\n   var numbers = generateSequence(2) { it + 1 }\n\n   while (true) {\n       val prime = numbers.first()\n       yield(prime)\n       numbers = numbers.drop(1)\n           .filter { it % prime != 0 }\n   }\n}\n\nprint(primes.take(10).toList()) \n// [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n\nAlthough in nearly every group there is a person who tries to “optimize” it, and to not create the variable in every loop he or she extracts prime as a mutable variable:\nval primes: Sequence = sequence {\n   var numbers = generateSequence(2) { it + 1 }\n\n   var prime: Int\n   while (true) {\n       prime = numbers.first()\n       yield(prime)\n       numbers = numbers.drop(1)\n           .filter { it % prime != 0 }\n   }\n}\n\nThe problem is that this implementation does not work correctly anymore. These are the first 10 yielded numbers:\nprint(primes.take(10).toList()) \n// [2, 3, 5, 6, 7, 8, 9, 10, 11, 12]\n\nStop now and try to explain this result.\nThe reason why we have such a result is that we captured the variable prime. Filtering is done lazily because we’re using a sequence. In every step, we add more and more filters. In the “optimized” one we always add the filter which references the mutable property prime. Therefore we always filter the last value of prime. This is why this filtering does not work properly. Only dropping works and so we end up with consecutive numbers (except for 4 which was filtered out when prime was still set to 2).\nWe should be aware of problems with unintentional capturing because such situations happen. To prevent them we should avoid mutability and prefer narrower scope for variables.\nSummary\nFor many reasons, we should prefer to define variables for the closest possible scope. Also, we prefer val over var also for local variables. We should always be aware of the fact that variables are captured in lambdas. These simple rules can save us a lot of trouble.\n"},"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html":{"url":"Part 1 Good code/Chapter 1 Safety/Item 3 Eliminate platform types as soon as possible.html","title":"Item 3 Eliminate Platform Types As Soon As Possible","keywords":"","body":"The null-safety introduced by Kotlin is amazing. Java was known in the community from Null-Pointer Exceptions (NPE), and Kotlin’s safety mechanisms make them rare or eliminate them entirely. Although one thing that cannot be secured completely is a connection between a language that does not have solid null-safety - like Java or C - and Kotlin. Imagine that we use a Java method that declares String as a return type. What type should it be in Kotlin?\nIf it is annotated with the @Nullable annotation then we assume that it is nullable and we interpret it as a String?. If it is annotated with @NotNull then we trust this annotation and we type it as String. Though, what if this return type is not annotated with either of those annotations?\n// Java \npublic class JavaTest {\n    public String giveName() { \n          // ...\n    }\n}\n\nWe might say that then we should treat such a type as nullable. This would be a safe approach since in Java everything is nullable. However, we often know that something is not null so we would end up using the not-null assertion !! in many places all around our code.\nThe real problem would be when we would need to take generic types from Java. Imagine that a Java API returns a List that is not annotated at all. If Kotlin would assume nullable types by default, and we would know that this list and those users are not null, we would need to not only assert the whole list but also filter nulls:\n// Java \npublic class UserRepo {\n        public List getUsers() { \n          //*** \n    }\n}\n\n// Kotlin \nval users: List = UserRepo().users!!.filterNotNull()\n\nWhat if a function would return a List> instead?\nGets complicated:\nval users: List> = UserRepo().groupedUsers!!.map { it!!.filterNotNull() }\n\nLists at least have functions like map and filterNotNull. In other\ngeneric types, nullability would be an even bigger problem. This is why instead of being treated as nullable by default, a type that comes from Java and has unknown nullability is a special type in Kotlin. It is called a platform type.\nPlatform type - a type that comes from another language and has unknown nullability.\nPlatform types are notated with a single exclamation mark ! after the type name, such as String!. Though this notation cannot be used in a code. Platform types are non-denotable, meaning that one cannot write them down explicitly in the language. When a platform value is assigned to a Kotlin variable or property, it can be inferred but it cannot be explicitly set. Instead, we can choose the type that we expect: Either a nullable or a non-null type.\n// Java \npublic class UserRepo {\n    public User getUser() {\n            //...\n    } \n}\n\n// Kotlin \nval repo = UserRepo() \nval user1 = repo.user // Type of user1 is User! \nval user2: User = repo.user // Type of user2 is User \nval user3: User? = repo.user // Type of user3 is User?\n\nThanks to this fact, getting generic types from Java is not problematic:\nval users: List = UserRepo().users \nval users: List> = UserRepo().groupedUsers\n\nThe problem is that is still dangerous because something we assumed to be not-null might be null. This is why for safety reasons I always suggest to be very conscientious of when we get platform types from Java. Remember that even if a function does not return null now, that doesn’t mean that it won’t change in the future. If its designer hasn’t specified it by an annotation or by describing it in a comment, they can introduce this behavior without changing any contract.\nIf you have some control over Java code that needs to interoperate with Kotlin, introduce @Nullable and @NotNull annotations wherever possible.\n// Java \nimport org.jetbrains.annotations.NotNull; \npublic class UserRepo {\n        public @NotNull User getUser() {\n                //...\n    } \n}\n\nThis is one of the most important steps when we want to support Kotlin developers well (and it’s also important information for Java developers). Annotating many exposed types was one of the most important changes that were introduced into the Android API after Kotlin became a first-class citizen. This made the Android API much more Kotlin-friendly.\nNote that many different kinds of annotations are supported, including those by:\n\nJetBrains (@Nullable and @NotNull from org.jetbrains.annotations)\n\nAndroid (@Nullable and @NonNull from androidx.annotation as well as from com.android.annotations and from the support library android.support.annotations)\n\nJSR-305 (@Nullable,@CheckForNull and @Nonnull from javax.annotation)\n\nJavaX (@Nullable, @CheckForNull, @Nonnull from javax.annotation)\n\nFindBugs (@Nullable, @CheckForNull, @PossiblyNull and @NonNull from edu.umd.cs.findbugs.annotations)\n\nReactiveX (@Nullable and @NonNull from io.reactivex.annotations)\n\nEclipse (@Nullable and @NonNull from org.eclipse.jdt.annotation)\n\nLombok (@NonNull from lombok)\n\n\nAlternatively, you can specify in Java that all types should be Notnull by default using JSR 305’s @ParametersAreNonnullByDefault annotation.\nThere is something we can do in our Kotlin code as well. My recommendation for safety reasons is to eliminate these platform types as soon as possible. To understand why, think about the difference between how statedType and platformType functions behave in this example:\n// Java \npublic class JavaClass {\n        public String getValue() {\n                return null;\n    } \n}\n\n// Kotlin \nfun statedType() {\n\n        val value: String = JavaClass().value\n\n        //...\n\n        println(value.length) \n}\n\nfun platformType() { \n      val value = JavaClass().value \n      //...\n      println(value.length) \n}\n\nIn both cases, a developer assumed that getValue will not return null and he or she was wrong. This results in an NPE in both cases, but there’s a difference in where that error happens.\nIn statedType the NPE will be thrown in the same line where we get the value from Java. It would be absolutely clear that we wrongly assumed a not-null type and we got null. We would just need to change it and adjust the rest of our code to this change.\nIn platformType the NPE will be thrown when we use this value as not-nullable. Possibly from a middle of some more complex expression. Variable typed as a platform type can be treated both as nullable and not-nullable. Such variable might be used few times safely, and then unsafely and throw NPE then. When we use such properties, typing system do not protect us. It is a similar situation as in Java, but in Koltin we do not expect that we might have NPE just from using an object. It is very likely that sooner or later someone will use it unsafely, and then we will end up with a runtime exception and its cause might be not so easy to find.\n// Java \npublic class JavaClass {\n        public String getValue() {\n                return null;\n    } \n}\n\n// Kotlin \nfun platformType() {\n        val value = JavaClass().value\n        //...\n        println(value.length) // NPE \n}\n\nfun statedType() { \n      val value: String = JavaClass().value // NPE \n      //...\n      println(value.length) \n}\n\nWhat is even more dangerous, platform type might be propagated further. For instance, we might expose a platform type as a part of our interface:\ninterface UserRepo { \n    fun getUserName() = JavaClass().value \n}\n\nIn this case, methods inferred type is a platform type. This means that anyone can still decide if it is nullable or not. One might choose to treat it as nullable in a definition site, and as a non-nullable in the use-site:\nclass RepoImpl: UserRepo {\n   override fun getUserName(): String? {\n       return null\n   }\n}\n\nfun main() {\n   val repo: UserRepo = RepoImpl()\n   val text: String = repo.getUserName() // NPE in runtime\n   print(\"User name length is ${text.length}\")\n}\n\nPropagating a platform type is a recipe for disaster. They are problematic, and for safety reasons, we should always eliminate them as soon as possible. In this case, IDEA IntelliJ helps us with a warning:\n\nSummary\nTypes that come from another language and has unknown nullability are known as platform types. Since they are dangerous, we should eliminate them as soon as possible, and do not let them propagate. It is also good to specify types using annotations that specify nullability on exposed Java constructors, methods and fields. It is precious information both for Java and Kotlin developers using those elements.\n"},"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html":{"url":"Part 1 Good code/Chapter 1 Safety/Item 4 Do not expose inferred types.html","title":"Item 4 Do Not Expose Inferred Types","keywords":"","body":"Kotlin’s type inference is one of the most popular Kotlin features in the JVM world. So popular that Java 10 introduced type inference as well (limited comparing to Kotlin). Though, there are some dangers in using this feature. Above all, we need to remember that the inferred type of an assignment is the exact type of the right side, and not a superclass or interface:\nopen class Animal\nclass Zebra: Animal()\n\nfun main() {\n   var animal = Zebra()\n   animal = Animal() // Error: Type mismatch\n}\n\nIn most cases, this is not a problem. When we have too restrictive type inferred, we just need to specify it and our problem is solved:\nopen class Animal\nclass Zebra: Animal()\n\nfun main() {\n   var animal: Animal = Zebra()\n   animal = Animal()\n}\n\nThough, there is no such comfort when we don’t control a library or another module. In such cases, inferred type exposition can be really dangerous. Let’s see an example. \nLet’s say that you have the following interface used to represent car factories:\n1 interface CarFactory {\n2    fun produce(): Car\n3 }\n\nThere is also a default car used if nothing else was specified:\n1 val DEFAULT_CAR: Car = Fiat126P()\n\nIt is produced in most factories, so you made it default. You omitted the type because you decided that DEFAULT_CAR is a Car anyway:\n1 interface CarFactory {\n2    fun produce() = DEFAULT_CAR\n3 }\n\nSimilarly, someone later looked at DEFAULT_CAR and decided that its type can be inferred:\n1 val DEFAULT_CAR = Fiat126P()\n\nNow, all your factories can only produce Fiat126P. Not good. If you defined this interface yourself, this problem will be probably caught soon and easily fixed. Though, if it is a part of the external API, you might be informed first by angry users.\nExcept that, the return type is important information when someone does not know API well, and so for the sake of readability, we should make it explicit especially in parts of our API visible from outside (so exposed API). \nSummary\nThe general rule is that if we are not sure about the type, we should specify it. It is important information and we should not hide it (Item 14: Specify the variable type when it is not clear). Additionally for the sake of safety, in an external API, we should always specify types. We cannot let them be changed by accident. Inferred types can be too restrictive or can too easily change when our project evolves.\n"},"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html":{"url":"Part 1 Good code/Chapter 1 Safety/Item 5 Specify your expectations on arguments and state.html","title":"Item 5 Specify Your Expectations On Arguments And State","keywords":"","body":"Item 5: Specify your expectations on arguments and state\nWhen you have expectations, declare them as soon as possible. We do that in Kotlin mainly using:\n\nrequire block - a universal way to specify expectations on arguments.\ncheck block - a universal way to specify expectations on the state.\nassert block - a universal way to check if something is true. Such checks on the JVM will be evaluated only on the testing mode.\nElvis operator with return or throw.\n\nHere is an example using those mechanisms:\n// Part of Stack\nfun pop(num: Int = 1): List {\n   require(num \nSpecifying experiences this way does not free us from the necessity to specify those expectations in the documentation, but it is really helpful anyway. Such declarative checks have many advantages:\n\nExpectations are visible even to those programmers who are not reading the documentation.\nIf they are not satisfied, the function throws an exception instead of leading to unexpected behavior. It is important that these exceptions are thrown before the state is modified and so we will not have a situation where only some modifications are applied and others are not. Such situations are dangerous and hard to manage4. Thanks to assertive checks, errors are harder to miss and our state is more stable.\nCode is to some degree self-checking. There is less of a need to be unit-tested when these conditions are checked in the code.\nAll checks listed above work with smart-casting, so thanks to them there is less casting required.\n\nLet’s talk about different kinds of checks, and why we need them. Starting from the most popular one: the arguments check.\nArguments\nWhen you define a function with arguments, it is not uncommon to have some expectations on those arguments that cannot be expressed using the type system. Just take a look at a few examples:\n\nWhen you calculate the factorial of a number, you might require this number to be a positive integer.\nWhen you look for clusters, you might require a list of points to not be empty.\nWhen you send an email to a user you might require that user to have an email, and this value to be a correct email address (assuming that user should check email correctness before using this function).\n\nThe most universal and direct Kotlin way to state those requirements is using the require function that checks this requirement and throws an exception if it is not satisfied:\nfun factorial(n: Int): Long {\n   require(n >= 0)\n   return if (n ): List {\n   require(points.isNotEmpty())\n   //...\n}\n\nfun sendEmail(user: User, message: String) {\n   requireNotNull(user.email)\n   require(isValidEmail(user.email))\n   //...\n}\n\nNotice that these requirements are highly visible thanks to the fact they are declared at the very beginning of the functions. This makes them clear for the user reading those functions (though the requirements should be stated in documentation as well because not everyone reads function bodies).\nThose expectations cannot be ignored, because the require function throws an\nIllegalArgumentException when the predicate is not satisfied. When such a block is placed at the beginning of the function we know that if an argument is incorrect, the function will stop immediately and the user won’t miss it. The exception will be clear in opposition to the potentially strange result that might propagate far until it fails. In other words, when we properly specify our expectations on arguments at the beginning of the function, we can then assume that those expectations will be satisfied.\nWe can also specify a lazy message for this exception in a lambda expression after the call:\nfun factorial(n: Int): Long {\n   require(n >= 0) { \"Cannot calculate factorial of $n \" +\n\"because it is smaller than 0\" }\n   return if (n \nThe require function is used when we specify requirements on arguments.\nAnother common case is when we have expectations on the current state, and in such a case, we can use the check function instead.\nState\nIt is not uncommon that we only allow using some functions in concrete conditions. A few common examples:\n\nSome functions might need an object to be initialized first.\nActions might be allowed only if the user is logged in.\nFunctions might require an object to be open.\n\nThe standard way to check if those expectations on the state are satisfied is to use the check function:\nfun speak(text: String) {\n   check(isInitialized)\n   //...\n}\n\nfun getUserInfo(): UserInfo {\n   checkNotNull(token)\n   //...\n}\n\nfun next(): T {\n   check(isOpen)\n   //...\n}\n\nThe check function works similarly to require, but it throws an IllegalStateException when the stated expectation is not met. It checks if a state is correct. The exception message can be customized using a lazy message, just like with require. When the expectation is on the whole function, we place it at the beginning, generally after the require blocks. Although some state expectations are local, and check can be used later.\nWe use such checks especially when we suspect that a user might break our contract and call the function when it should not be called. Instead of trusting that they won’t do that, it is better to check and throw an appropriate exception. We might also use it when we do not trust that our own implementation handles the state correctly. Although for such cases, when we are checking mainly for the sake of testing our own implementation, we have another function called assert.\nAssertions\nThere are things we know to be true when a function is implemented correctly. For instance, when a function is asked to return 10 elements we might expect that it will return 10 elements. This is something we expect to be true, but it doesn’t mean we are always right. We all make mistakes. Maybe we made a mistake in the implementation. Maybe someone changed a function we used and our function does not work properly anymore. Maybe our function does not work correctly anymore because it was refactored. For all those problems the most universal solution is that we should write unit tests that check if our expectations match reality:\nclass StackTest {\n\n   @Test\n   fun `Stack pops correct number of elements`() {\n       val stack = Stack(20) { it }\n       val ret = stack.pop(10)\n       assertEquals(10, ret.size)\n   }\n\n   //...\n}\n\nUnit tests should be our most basic way to check implementation correctness but notice here that the fact that popped list size matches the desired one is rather universal to this function. It would be useful to add such a check in nearly every pop call. Having only a single check for this single use is rather naive because there might be some edge-cases. A better solution is to include the assertion in the function:\nfun pop(num: Int = 1): List {\n   //...\n   assert(ret.size == num)\n   return ret\n}\n\nSuch conditions are currently enabled only in Kotlin/JVM, and they are not checked unless they are enabled using the -ea JVM option. We should rather treat them as part of unit tests - they check if our code works as expected. By default, they are not throwing any errors in production. They are enabled by default only when we run tests. This is generally desired because if we made an error, we might rather hope that the user won’t notice. If this is a serious error that is probable and might have significant consequences, use check instead. The main advantages of having assert checks in functions instead of in unit tests are:\n\nAssertions make code self-checking and lead to more effective testing.\nExpectations are checked for every real use-case instead of for concrete cases.\nWe can use them to check something at the exact point of execution.\nWe make code fail early, closer to the actual problem. Thanks to that we can also easily find where and when the unexpected behavior started.\n\nJust remember that for them to be used, we still need to write unit tests. In a standard application run, assert will not throw any exceptions.\nSuch assertions are a common practice in Python. Not so much in Java. In Kotlin feel free to use them to make your code more reliable.\nNullability and smart casting\nBoth require and check have Kotlin contracts that state that when the function returns, its predicate is true after this check.\npublic inline fun require(value: Boolean): Unit {\n   contract {\n       returns() implies value\n   }\n   require(value) { \"Failed requirement.\" }\n}\n\nEverything that is checked in those blocks will be treated as true later in the same function. This works well with smart casting because once we check if something is true, the compiler will treat it so. In the below example we require a person’s outfit to be a Dress. After that, assuming that the outfit property is final, it will be smart cast to Dress.\nfun changeDress(person: Person) {\n   require(person.outfit is Dress)\n   val dress: Dress = person.outfit\n   //...\n}\n\nThis characteristic is especially useful when we check if something is null:\nclass Person(val email: String?)\n\nfun sendEmail(person: Person, message: String) {\n   require(person.email != null)\n   val email: String = person.email\n   //...\n}\n\nFor such cases, we even have special functions: requireNotNull and checkNotNull. They both have the capability to smart cast variables, and they can also be used as expressions to “unpack” it:\nclass Person(val email: String?)\nfun validateEmail(email: String) { /*...*/ }\n\nfun sendEmail(person: Person, text: String) {\n   val email = requireNotNull(person.email)\n   validateEmail(email)\n   //...\n}\n\nfun sendEmail(person: Person, text: String) {\n   requireNotNull(person.email)\n   validateEmail(person.email)\n   //...\n}\n\nFor nullability, it is also popular to use the Elvis operator with throw or return on the right side. Such a structure is also highly readable and at the same time, it gives us more flexibility in deciding what behavior we want to achieve. First of all, we can easily stop a function using return instead of throwing an error:\nfun sendEmail(person: Person, text: String) {\n   val email: String = person.email ?: return\n   //...\n}\n\nIf we need to make more than one action if a property is incorrectly null, we can always add them by wrapping return or throw into the run function. Such a capability might be useful if we would need to log why the function was stopped:\nfun sendEmail(person: Person, text: String) {\n   val email: String = person.email ?: run {\n       log(\"Email not sent, no email address\")\n       return\n   }\n   //...\n}\n\nThe Elvis operator with return or throw is a popular and idiomatic way to specify what should happen in case of variable nullability and we should not hesitate to use it. Again, if it is possible, keep such checks at the beginning of the function to make them visible and clear.\nSummary\nSpecify your expectations to:\n\nMake them more visible.\nProtect your application stability.\nProtect your code correctness.\nSmart cast variables.\n\nFour main mechanisms we use for that are:\n\nrequire block - a universal way to specify expectations on arguments.\ncheck block - a universal way to specify expectations on the state.\nassert block - a universal way to test in testing mode if something is true.\nElvis operator with return or throw.\n\nYou might also use throw to throw a different error.\n"},"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html":{"url":"Part 1 Good code/Chapter 1 Safety/Item 6 Prefer standard errors to custom ones.html","title":"Item 6 Prefer Standard Errors To Custom Ones","keywords":"","body":"Item 6: Prefer standard errors to custom ones\nFunctions require, check and assert cover the most common Kotlin errors, but there are also other kinds of unexpected situations we need to indicate. For instance, when you implement a library to parse the JSON format, it is reasonable to throw a JsonParsingException when the provided JSON file does not have the correct format:\ninline fun  String.readObject(): T {\n   //...\n   if (incorrectSign) {\n       throw JsonParsingException()\n   }\n   //...\n   return result\n}\n\nHere we used a custom error because there is no suitable error in the standard library to indicate that situation. Whenever possible, you should use exceptions from the standard library instead of defining your own. Such exceptions are known by developers and they should be reused. Reusing known elements with well-established contracts makes your API easier to learn and to understand. Here is the list of some of the most common exceptions you can use:\n\nIllegalArgumentException and IllegalStateException that we throw using require and check as described in Item 5: Specify your expectations on arguments and state.\nIndexOutOfBoundsException - Indicate that the index parameter value is out of range. Used especially by collections and arrays. It is thrown for instance by ArrayList.get(Int).\nConcurrentModificationException - Indicate that concurrent modification is prohibited and yet it has been detected. \nUnsupportedOperationException - Indicate that the declared method is not supported by the object. Such a situation should be avoided and when a method is not supported, it should not be present in the class. \nNoSuchElementException - Indicate that the element being requested does not exist. Used for instance when we implement Iterable and the client asks for next when there are no more elements.\n\n"},"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html":{"url":"Part 1 Good code/Chapter 1 Safety/Item 7 Prefer null or Failure result when the lack of result is possible.html","title":"Item 7 Prefer Null Or Failure Result When The Lack Of Result Is Possible","keywords":"","body":"Item 7: Prefer null or Failure result when the lack of result is possible\nSometimes, a function cannot produce its desired result. A few common examples are:\n\nWe try to get data from some server, but there is a problem with our internet connection\nWe try to get the first element that matches some criteria, but there is no such element in our list\nWe try to parse an object from the text, but this text is malformatted\n\nThere are two main mechanisms to handle such situations:\n\nReturn a null or a sealed class indicating failure (that is often named Failure)\nThrow an exception\n\nThere is an important difference between those two. Exceptions should not be used as a standard way to pass information. All exceptions indicate incorrect, special situations and should be treated this way. We should use exceptions only for exceptional conditions(Effective Java by Joshua Bloch). Main reasons for that are:\n\nThe way exceptions propagate is less readable for most programmers and might be easily missed in the code.\nIn Kotlin all exceptions are unchecked. Users are not forced or even encouraged to handle them. They are often not well documented. They are not really visible when we use an API. \nBecause exceptions are designed for exceptional circumstances, there is little incentive for JVM implementers to make them as fast as explicit tests.\nPlacing code inside a try-catch block inhibits certain optimizations that the compiler might otherwise perform.\n\nOn the other hand, null or Failure are both perfect to indicate an expected error. They are explicit, efficient, and can be handled in idiomatic ways. This is why the rule is that we should prefer returning null or Failure when an error is expected, and throwing an exception when an error is not expected. Here are some examples:\ninline fun  String.readObjectOrNull(): T? {\n   //...\n   if (incorrectSign) {\n       return null\n   }\n   //...\n   return result\n}\n\ninline fun  String.readObject(): Result {\n   //...\n   if (incorrectSign) {\n       return Failure(JsonParsingException())\n   }\n   //...\n   return Success(result)\n}\n\nsealed class Result\nclass Success(val result: T) : Result()\nclass Failure(val throwable: Throwable) : Result()\n\nclass JsonParsingException : Exception()\n\nErrors indicated this way are easier to handle and harder to miss. When we choose to use null, clients handling such a value can choose from the variety of null-safety supporting features like a safe-call or the Elvis operator:\nval age = userText.readObjectOrNull()?.age ?: -1\n\nWhen we choose to return a union type like Result, the user will be able to handle it using the when-expression:\nval personResult = userText.readObject()\nval age = when(personResult) {\n    is Success -> personResult.value.age\n    is Failure -> -1\n}\n\nUsing such error handling is not only more efficient than the try-catch block but often also easier to use and more explicit. An exception can be missed and can stop our whole application. Whereas a null value or a sealed result class needs to be explicitly handled, but it won’t interrupt the flow of the application. \nComparing nullable result and a sealed result class, we should prefer the latter when we need to pass additional information in case of failure, and null otherwise. Remember that Failure can hold any data you need. \nIt is common to have two variants of functions - one expecting that failure can occur and one treating it as an unexpected situation. A good example is that List has both:\n\nget which is used when we expect an element to be at the given position, and if it is not there, the function throws IndexOutOfBoundsException.\ngetOrNull, which is used when we suppose that we might ask for an element out of range, and if that happens, we’ll get null. \n\nIt also support other options, like getOrDefault, that is useful in some cases but in general might be easily replaced with getOrNull and Elvis operator ?:. \nThis is a good practice because if developers know they are taking an element safely, they should not be forced to handle a nullable value, and at the same time, if they have any doubts, they should use getOrNull and handle the lack of value properly.\n"},"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html":{"url":"Part 1 Good code/Chapter 1 Safety/Item 8 Handle nulls properly.html","title":"Item 8 Handle Nulls Properly","keywords":"","body":"Item 8: Handle nulls properly\nnull means a lack of value. For property, it might mean that the value was not set or that it was removed. When a function returns null it might have a different meaning depending on the function:\n\nString.toIntOrNull() returns null when String cannot be correctly parsed to Int\nIterable.firstOrNull(() -> Boolean) returns null when there are no elements matching predicate from the argument. \n\nIn these and all other cases the meaning of null should be as clear as possible. This is because nullable values must be handled, and it is the API user (programmer using API element) who needs to decide how it is to be handled. \nval printer: Printer? = getPrinter()\nprinter.print() // Compilation Error\n\nprinter?.print() // Safe call\nif (printer != null) printer.print() // Smart casting\nprinter!!.print() // Not-null assertion\n\nIn general, there are 3 ways of how nullable types can be handled. We can:\n\nHandling nullability safely using safe call ?., smart casting, Elvis operator, etc.\nThrow an error\nRefactor this function or property so that it won’t be nullable\n\nLet’s describe them one by one.\nHandling nulls safely\nAs mentioned before, the two safest and most popular ways to handle nulls is by using safe call and smart casting:\nprinter?.print() // Safe call\nif (printer != null) printer.print() // Smart casting\n\nIn both those cases, the function print will be called only when printer is not null. This is the safest option from the application user point of view. It is also really comfortable for programmers. No wonder why this is generally the most popular way how we handle nullable values. \nSupport for handling nullable variables in Kotlin is much wider than in other languages. One popular practice is to use the Elvis operator which provides a default value for a nullable type. It allows any expression including return and throw on its right side:\nval printerName1 = printer?.name ?: \"Unnamed\"\nval printerName2 = printer?.name ?: return\nval printerName3 = printer?.name ?: \n    throw Error(\"Printer must be named\")\n\nMany objects have additional support. For instance, as it is common to ask for an empty collection instead of null, there is orEmpty extension function on Collection? returning not-nullable List. There is also a similar function for String?.\nSmart casting is also supported by Kotlin’s contracts feature that lets us smart cast in a function:\nprintln(\"What is your name?\")\nval name = readLine()\nif (!name.isNullOrBlank()) {\n   println(\"Hello ${name.toUpperCase()}\")\n}\n\nval news: List? = getNews()\nif (!news.isNullOrEmpty()) {\n   news.forEach { notifyUser(it) }\n}\n\nAll those options should be known to Kotlin developers, and they all provide useful ways to handle nullability properly. \nDefensive and offensive programming\nHandling all possibilities in a correct way - like here not using printer when it is null - is an implementation of defensive programming. Defensive programming is a blanket term for various practices increasing code stability once the code is in production, often by defending against the currently impossible. It is the best way when there is a correct way to handle all possible situations. It wouldn’t be correct if we would expect that printer is not null and should be used. In such a case it would be impossible to handle such a situation safely, and we should instead use a technique called offensive programming. The idea behind offensive programming is that in case of an unexpected situation we complain about it loudly to inform the developer who led to such situation, and to force him or her to correct it. A direct implementation of this idea is require, checkand assert presented in Item 5: Specify your expectations on arguments and state. It is important to understand that even though those two modes seem like being in conflict, they are not at all. They are more like yin and yang. Those are different modes both needed in our programs for the sake of safety, and we need to understand them both and use them appropriately. \nThrow an error\nOne problem with safe handling is that if printer could sometimes be null, we will not be informed about it but instead print won’t be called. This way we might have hidden important information. If we are expecting printer to never be null, we will be surprised when the print method isn’t called. This can lead to errors that are really hard to find. When we have a strong expectation about something that isn’t met, it is better to throw an error to inform the programmer about the unexpected situation. It can be done using throw, as well as by using the not-null assertion !!, requireNotNull, checkNotNull, or other error throwing functions:\nfun process(user: User) {\n    requireNotNull(user.name)\n    val context = checkNotNull(context)\n    val networkService = \n        getNetworkService(context) ?: \n        throw NoInternetConnection()\n    networkService.getData { data, userData ->\n        show(data!!, userData!!)\n    }\n}\n\nThe problems with the not-null assertion !!\nThe simplest way to handle nullable is by using not-null assertion !!. It is conceptually similar to what happens in Java - we think something is not null and if we are wrong, an NPE is thrown. Not-null assertion !! is a lazy option. It throws a generic exception that explains nothing. It is also short and simple, which also makes it easy to abuse or misuse. Not-null assertion !! is often used in situations where type is nullable but null is not expected. The problem is that even if it currently is not expected, it almost always can be in the future, and this operator only quietly hides the nullability.\nA very simple example is a function looking for the largest among 4 arguments9. Let’s say that we decided to implement it by packing all those arguments into a list and then using max to find the biggest one. The problem is that it returns nullable because it returns nullwhen the collection is empty. Though developer knowing that this list cannot be empty will likely use not-null assertion !!:\nfun largestOf(a: Int, b: Int, c: Int, d: Int): Int =\n   listOf(a, b, c, d).max()!!\n\nAs it was shown to me by Márton Braun who is a reviewer of this book, even in such a simple function not-null assertion !! can lead to NPE. Someone might need to refactor this function to accept any number of arguments and miss the fact that collection cannot be empty:\nfun largestOf(vararg nums: Int): Int =\n   nums.max()!!\n\nlargestOf() // NPE\n\nInformation about nullability was silenced and it can be easily missed when it might be important. Similarly with variables. Let’s say that you have a variable that needs to be set later but it will surely be set before the first use. Setting it to null and using a not-null assertion !! is not a good option:\nclass UserControllerTest {\n\n    private var dao: UserDao? = null\n    private var controller: UserController? = null\n\n    @BeforeEach\n    fun init() {\n        dao = mockk()\n        controller = UserController(dao!!)\n    }\n\n    @Test\n    fun test() {\n        controller!!.doSomething()\n    }\n\n}\n\nIt is not only annoying that we need to unpack those properties every time, but we also block the possibility for those properties to actually have a meaningful null in the future. Later in this item, we will see that the correct way to handle such situations is to use lateinit or Delegates.notNull.\nNobody can predict how code will evolve in the future, and if you use not-null assertion !! or explicit error throw, you should assume that it will throw an error one day. Exceptions are thrown to indicate something unexpected and incorrect (Item 7: Prefer null or a sealed result class result when the lack of result is possible). However, explicit errors say much more than generic NPE and they should be nearly always preferred.\nRare cases where not-null assertion !! does make sense are mainly a result of common interoperability with libraries in which nullability is not expressed correctly. When you interact with an API properly designed for Kotlin, this shouldn’t be a norm.\nIn general we should avoid using the not-null assertion !!. This suggestion is rather widely approved by our community. Many teams have the policy to block it. Some set the Detekt static analyzer to throw an error whenever it is used. I think such an approach is too extreme, but I do agree that it often is a code smell. Seems like the way this operator looks like is no coincidence. !! seems to be screaming “Be careful” or “There is something wrong here”.\nAvoiding meaningless nullability\nNullability is a cost as it needs to be handled properly and we prefer avoiding nullability when it is not needed. null might pass an important message, but we should avoid situations where it would seem meaningless to other developers. They would then be tempted to use the unsafe not-null assertion !! or forced to repeat generic safe handling that only clutters the code. We should avoid nullability that does not make sense for a client. The most important ways for that are:\n\nClasses can provide variants of functions where the result is expected and in which lack of value is considered and nullable result or a sealed result class is returned. Simple example is get and getOrNull on List. Those are explained in detail in Item 7: Prefer null or a sealed result class result when the lack of result is possible.\nUse lateinit property or notNull delegate when a value is surely set before use but later than during class creation.\nDo not return null instead of an empty collection. When we deal with a collection, like List? or Set?, null has a different meaning than an empty collection. It means that no collection is present. To indicate a lack of elements, use an empty collection. \nNullable enum and None enum value are two different messages. null is a special message that needs to be handled separately, but it is not present in the enum definition and so it can be added to any use-side you want.\n\nLet’s talk about lateinit property and notNull delegate as they deserve a deeper explanation. \nlateinit property and notNull delegate\nIt is not uncommon in projects to have properties that cannot be initialized during class creation, but that will surely be initialized before the first use. A typical example is when the property is set-up in a function called before all others, like in @BeforeEach in JUnit 5:\nclass UserControllerTest {\n\n    private var dao: UserDao? = null\n    private var controller: UserController? = null\n\n    @BeforeEach\n    fun init() {\n        dao = mockk()\n        controller = UserController(dao!!)\n    }\n\n    @Test\n    fun test() {\n        controller!!.doSomething()\n    }\n\n}\n\nCasting those properties from nullable to not null whenever we need to use them is highly undesirable. It is also meaningless as we expect that those values are set before tests. The correct solution to this problem is to use lateinit modifier that lets us initialize properties later:\nclass UserControllerTest {\n   private lateinit var dao: UserDao\n   private lateinit var controller: UserController\n\n   @BeforeEach\n   fun init() {\n       dao = mockk()\n       controller = UserController(dao)\n   }\n\n   @Test\n   fun test() {\n       controller.doSomething()\n   }\n}\n\nThe cost of lateinit is that if we are wrong and we try to get value before it is initialized, then an exception will be thrown. Sounds scary but it is actually desired - we should use lateinit only when we are sure that it will be initialized before the first use. If we are wrong, we want to be informed about it. The main differences between lateinit and a nullable are:\n\nWe do not need to “unpack” property every time to not-nullable\nWe can easily make it nullable in the future if we need to use null to indicate something meaningful\nOnce property is initialized, it cannot get back to an uninitialized state\n\nlateinit is a good practice when we are sure that a property will be initialized before the first use. We deal with such a situation mainly when classes have their lifecycle and we set properties in one of the first invoked methods to use it on the later ones. For instance when we set objects in onCreate in an Android Activity, viewDidAppear in an iOS UIViewController, or componentDidMount in a React React.Component.\nOne case in which lateinit cannot be used is when we need to initialize a property with a type that, on JVM, associates to a primitive, like Int, Long, Double or Boolean. For such cases we have to use Delegates.notNull which is slightly slower, but supports those types:\nclass DoctorActivity: Activity() {\n   private var doctorId: Int by Delegates.notNull()\n   private var fromNotification: Boolean by \n       Delegates.notNull()\n\n   override fun onCreate(savedInstanceState: Bundle?) {\n       super.onCreate(savedInstanceState)\n       doctorId = intent.extras.getInt(DOCTOR_ID_ARG)\n       fromNotification = intent.extras\n          .getBoolean(FROM_NOTIFICATION_ARG)\n   }\n}\n\nThese kinds of cases are often replaced with property delegates, like in the above example where we read the argument in onCreate, we could instead use a delegate that initializes those properties lazily:\nclass DoctorActivity: Activity() {\n   private var doctorId: Int by arg(DOCTOR_ID_ARG)\n   private var fromNotification: Boolean by \n       arg(FROM_NOTIFICATION_ARG)\n}\n\nThe property delegation pattern is described in detail in Item 21: Use property delegation to extract common property patterns. One reason why they are so popular is that they help us safely avoid nullability.\n"},"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html":{"url":"Part 1 Good code/Chapter 1 Safety/Item 9 Close resources with use.html","title":"Item 9 Close Resources With Use","keywords":"","body":"Item 9: Close resources with use\nThere are resources that cannot be closed automatically, and we need to invoke the close method once we do not need them anymore. The Java standard library, that we use in Kotlin/JVM, contains a lot of these resources, such as:\n\nInputStream and OutputStream,\njava.sql.Connection,\njava.io.Reader (FileReader, BufferedReader, CSSParser),\njava.new.Socket and java.util.Scanner.\n\nAll these resources implement the Closeable interface, which extends AutoCloseable. \nThe problem is that in all these cases, we need to be sure that we invoke the close method when we no longer need the resource because these resources are rather expensive and they aren’t easily closed by themselves (the Garbage Collector will eventually handle it if we do not keep any reference to this resource, but it will take some time). Therefore, to be sure that we will not miss closing them, we traditionally wrapped such resources in a try-finally block and called close there:\nfun countCharactersInFile(path: String): Int {\n   val reader = BufferedReader(FileReader(path))\n   try {\n       return reader.lineSequence().sumBy { it.length }\n   } finally {\n       reader.close()\n   }\n}\n\nSuch a structure is complicated and incorrect. It is incorrect because close can throw an error, and such an error will not be caught. Also, if we had errors from both the body of the try and from finally blocks, only one would be properly propagated. The behavior we should expect is for the information about the new error to be added to the previous one. The proper implementation of this is long and complicated, but it is also common and so it has been extracted into the usefunction from the standard library. It should be used to properly close resources and handle exceptions. This function can be used on any Closeable object:\nfun countCharactersInFile(path: String): Int {\n   val reader = BufferedReader(FileReader(path))\n   reader.use {\n       return reader.lineSequence().sumBy { it.length }\n   }\n}\n\nReceiver (reader in this case) is also passed as an argument to the lambda, so the syntax can be shortened:\nfun countCharactersInFile(path: String): Int {\n   BufferedReader(FileReader(path)).use { reader ->\n       return reader.lineSequence().sumBy { it.length }\n   }\n}\n\nAs this support is often needed for files, and as it is common to read files line-by-line, there is also a useLines function in the Kotlin Standard Library that gives us a sequence of lines (String) and closes the underlying reader once the processing is complete:\nfun countCharactersInFile(path: String): Int {\n   File(path).useLines { lines ->\n       return lines.sumBy { it.length }\n   }\n}\n\nThis is a proper way to process even large files as this sequence will read lines on-demand and does not hold more than one line at a time in memory. The cost is that this sequence can be used only once. If you need to iterate over the lines of the file more than once, you need to open it more than once. The useLines function can be also used as an expression:\nfun countCharactersInFile(path: String): Int =\n   File(path).useLines { lines -> \n       lines.sumBy { it.length } \n   }\n\nAll the above implementations use sequences to operate on the file and it is the correct way to do it. Thanks to that we can always read only one line instead of loading the content of the whole file. More about it in the item Item 49: Prefer Sequence for big collections with more than one processing step.\nSummary\nOperate on objects implementing Closeable or AutoCloseable using use. It is a safe and easy option. When you need to operate on a file, consider useLines that produces a sequence to iterate over the next lines.\n"},"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html":{"url":"Part 1 Good code/Chapter 1 Safety/Item 10 Write unit tests.html","title":"Item 10 Write Unit Tests","keywords":"","body":"Item 10: Write unit tests\nIn this chapter, you’ve seen quite a few ways to make your code safer, but the ultimate way to achieve this is to have different kinds of tests. One kind is checking that our application behaves correctly from the user’s perspective. These kinds of tests are too often the only ones recognized by management as this is generally their primary goal to make the application behave correctly from outside, not internally. These kinds of tests do not even need developers at all. They can be handled by a sufficient number of testers or, what is generally better in the long run, by automatic tests written by test engineers.\nSuch tests are useful for programmers, but they are not sufficient. They do not build proper assurance that concrete elements of our system behave correctly. They also do not provide fast feedback that is useful during development. For that, we need a different kind of tests that is much more useful for developers, and that is written by developers: unit tests. Here is an example unit test checking if our function fib calculating the Fibonacci number at n-th position gives us correct results for the first 5 numbers:\n@Test\nfun `fib works correctly for the first 5 positions`() {\n   assertEquals(1, fib(0))\n   assertEquals(1, fib(1))\n   assertEquals(2, fib(2))\n   assertEquals(3, fib(3))\n   assertEquals(5, fib(4))\n}\n\nWith unit tests, we typically check:\n\nCommon use cases (the happy path) - typical ways we expect the element to be used. Just like in the example above, we test if the function works for a few small numbers.\nCommon error cases or potential problems - Cases that we suppose might not work correctly or that were shown to be problematic in the past. \nEdge-cases and illegal arguments - for Int we might check for really big numbers like Int.MAX_VALUE. For a nullable object, it might be null or object filled with null values. There are no Fibonacci numbers for negative positions, so we might check how this function behaves then. \n\nUnit tests can be really useful during development as they give fast feedback on how the implemented element works. Tests are only ever-accumulating so you can easily check for regression. They can also check cases that are hard to test manually. There is even an approach called Test Driven Development (TDD) in which we write a unit test first and then implementation to satisfy it10. \nThe biggest advantages that result from unit tests are:\n\nWell-tested elements tend to be more reliable. There is also a psychological safety. When elements are well tested, we operate more confidently on them. \nWhen an element is properly tested, we are not afraid to refactor it. As a result, well-tested programs tend to get better and better. On the other hand, in programs that are not tested, developers are scared of touching legacy code because they might accidentally introduce an error without even knowing about it. \nIt is often much faster to check if something works correctly using unit tests rather than checking it manually. A faster feedback-loop makes development faster and more pleasurable11. It also helps reduce the cost of fixing bugs: the quicker you find them, the cheaper it is to fix them.\n\nClearly, there are also disadvantages to unit tests:\n\nIt takes time to write unit tests. Though in the long-term, good unit tests rather save our time as we spend less time debugging and looking for bugs later. We also save a lot of time as running unit tests is much faster than manual testing or other kinds of automated tests. \nWe need to adjust our code to make it testable. Such changes are often hard, but they generally also force developers to use good and well-established architectures. \nIt is hard to write good unit tests. It requires skills and understanding that are orthogonal to the rest of the development. Poorly written unit tests can do more harm than good. Everyone needs to learn how to properly unit-test their code. It is useful to take a course on Software-Testing or Test Driven Development (TDD) first.\n\nThe biggest challenge is to obtain the skills to effectively unit test and to write code that supports unit testing. Experienced Kotlin developers should obtain such skills and learn to unit test at least the important parts of the code. Those are:\n\nComplex functionalities\nParts that will most likely change over time or will be refactored\nBusiness logic\nParts of our public API\nParts that have a tendency to break\nProduction bugs that we fixed\n\nWe do not need to stop there. Tests are an investment in application reliability and long-term maintainability.\nSummary\nThis chapter was started with a reflection that the first priority should be for our programs to behave correctly. It can be supported by using good practices presented in this chapter, but above that, the best way to ensure that our application behaves correctly is to check it by testing, especially unit testing. This is why a responsible chapter about safety needs at least a short section about unit testing. Just like responsible business application requires at least some unit tests.\n"},"Part 1 Good code/Chapter 2 Readability/Introduction.html":{"url":"Part 1 Good code/Chapter 2 Readability/Introduction.html","title":"Introduction","keywords":"","body":"Chapter 2: Readability\n\nAny fool can write code that a computer can understand. Good programmers write code that humans can understand.\n–Martin Fowler, Refactoring: Improving the Design of Existing Code, p. 15\n\nThere is a very common misconception that Kotlin is designed to be concise. It isn’t. There are languages that are much more concise. For instance, the most concise language I know is APL. This is John Conway’s “Game of Life” implemented in APL:\n\nYour first thought is probably “Wow, that’s short”. Then you might realize that you don’t have some of those characters on your keyboard. There are more such languages, for example, here is the same program in J:\n1 life=:[:+/(3 4=/[:+/(,/,\"0/~i:1)|.])*.1,:]\nThese two are really concise languages. This characteristic makes them champions in code golf contests. It also makes them absurdly hard to read. Let’s be honest: even for experienced APL developers (and there are probably only a few of them in the world), it is a challenge to understand what this program does and how it works. \nKotlin never had ambitions to be very concise. It is designed to be readable. It is concise compared to other popular languages, but this comes from the fact that Kotlin eliminates a lot of noise: boilerplate code and repetitive structures. It was done to help developers concentrate on what is important, and thus make Kotlin more readable. \nKotlin allows programmers to design clean and meaningful code and APIs. Its features let us hide or highlight whatever we want. This chapter is about using these tools wisely. This particular chapter serves as an introduction and provides a set of general suggestions. Although it also introduces the concept of readability, which we will refer to in the rest of this book. Especially in Part 2: Abstraction design, where we will dive into topics related to class and function design.\nLet’s start with a bit more abstract item about readability, which will introduce the general problem.\n"},"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html":{"url":"Part 1 Good code/Chapter 2 Readability/Item 11 Design for readability.html","title":"Item 11 Design For Readability","keywords":"","body":"Item 11: Design for readability\nIt is a known observation in programming that developers read code much more than they write it. A common estimate is that for every minute spent writing code, ten minutes are spent reading it (this ratio was popularized by Robert C. Martin in the book Clean Code). If this seems unbelievable, just think about how much time you spend on reading code when you are trying to find an error. I believe that everyone has been in this situation at least once in their career where they’ve been searching for an error for weeks, just to fix it by changing a single line. When we learn how to use a new API, it’s often from reading code. We usually read the code to understand what is the logic or how implementation works. Programming is mostly about reading, not writing. Knowing that it should be clear that we should code with readability in mind.\nReducing cognitive load\nReadability means something different to everyone. However, there are some rules that were formed based on experience or came from cognitive science. Just compare the following two implementations:\n// Implementation A\nif (person != null && person.isAdult) {\n   view.showPerson(person)\n} else {\n   view.showError()\n}\n\n// Implementation B\nperson?.takeIf { it.isAdult }\n   ?.let(view::showPerson)\n   ?: view.showError()\n\nWhich one is better, A or B? Using the naive reasoning, that the one with fewer lines is better, is not a good answer. We could just as well remove the line breaks from the first implementation, and it wouldn’t make it more readable. \nHow readable both constructs are, depends on how fast we can understand each of them. This, in turn, depends a lot on how much our brain is trained to understand each idiom (structure, function, pattern). For a beginner in Kotlin, surely implementation A is way more readable. It uses general idioms (if/else, &&, method calls). Implementation B has idioms that are typical to Kotlin (safe call ?., takeIf, let, Elvis operator ?:, a bounded function reference view::showPerson). Surely, all those idioms are commonly used throughout Kotlin, so they are well known by most experienced Kotlin developers. Still, it is hard to compare them. Kotlin isn’t the first language for most developers, and we have much more experience in general programming than in Kotlin programming. We don’t write code only for experienced developers. The chances are that the junior you hired (after fruitless months of searching for a senior) does not know what let, takeIf, and bounded references are. It is also very likely that they never saw the Elvis operator used this way. That person might spend a whole day puzzling over this single block of code. Additionally, even for experienced Kotlin developers, Kotlin is not the only programming language they use. Many developers reading your code will not be experienced with Kotlin. The brain will always need to spend a bit of time to recognize Kotlin-specific idioms. Even after years with Kotlin, it still takes much less time for me to understand the first implementation. Every less known idiom introduces a bit of complexity and when we analyze them all together in a single statement that we need to comprehend nearly all at once, this complexity grows quickly.\nNotice that implementation A is easier to modify. Let’s say that we need to add additional operation on the if block. In the implementation A adding that is easy. In the implementation B we cannot use function reference anymore. Adding something to the else block in the implementation B is even harder - we need to use some function to be able to hold more than a single expression on the right side of the Elvis operator:\nif (person != null && person.isAdult) {\n   view.showPerson(person)\n   view.hideProgressWithSuccess()\n} else {\n   view.showError()\n   view.hideProgress()\n}\n\nperson?.takeIf { it.isAdult }\n   ?.let {\n       view.showPerson(it)\n       view.hideProgressWithSuccess()\n   } ?: run {\n       view.showError()\n       view.hideProgress()\n   }\n\nDebugging implementation A is also much simpler. No wonder why - debugging tools were made for such basic structures. \nThe general rule is that less common and “creative” structures are generally less flexible and not so well supported. Let’s say for instance that we need to add a third branch to show different error when person is null and different one when he or she is not an adult. On the implementation A using if/else, we can easily change if/else to when using IntelliJ refactorization, and then easily add additional branch. The same change on the code would be painful on the implementation B. It would probably need to be totally rewritten.\nHave you noticed that implementation A and B do not even work the same way? Can you spot the difference? Go back and think about it now. \nThe difference lies in the fact that let returns a result from the lambda expression. This means that if showPerson would return null, then the second implementation would call showError as well! This is definitely not obvious, and it teaches us that when we use less familiar structures, it is easier to fall in unexpected behavior (and not to spot them).\nThe general rule here is that we want to reduce cognitive load. Our brains recognize patterns and based on these patterns they build our understanding of how programs work. When we think about readability we want to shorten this distance. We prefer less code, but also more common structures. We recognize familiar patterns when we see them often enough. We always prefer structures that we are familiar with in other disciplines.\nDo not get extreme\nJust because in the previous example I presented how let can be misused, it does not mean that it should be always avoided. It is a popular idiom reasonably used in a variety of contexts to actually make code better. One popular example is when we have a nullable mutable property and we need to do an operation only if it is not null. Smart casting cannot be used because mutable property can be modified by another thread. One great way to deal with that is to use safe call let:\nclass Person(val name: String)\nvar person: Person? = null\n\nfun printName() {\n    person?.let {\n        print(it.name)\n    }\n}\n\nSuch idiom is popular and widely recognizable. There are many more reasonable cases for let. For instance:\n\nTo move operation after its argument calculation\nTo use it to wrap an object with a decorator\n\nHere are examples showing those two (both additionally use function references):\nstudents\n     .filter { it.result >= 50 }    \n     .joinToString(separator = \"\\n\") { \n        \"${it.name} ${it.surname}, ${it.result}\" \n     }\n     .let(::print)\n\nvar obj = FileInputStream(\"/file.gz\")\n    .let(::BufferedInputStream)\n    .let(::ZipInputStream)\n    .let(::ObjectInputStream)\n    .readObject() as SomeObject\n\nIn all those cases we pay our price - this code is harder to debug and harder to be understood by less experienced Kotlin developers. But we pay for something and it seems like a fair deal. The problem is when we introduce a lot of complexity for no good reason. \nThere will always be discussions when something makes sense and when it does not. Balancing that is an art. It is good though to recognize how different structures introduce complexity or how they clarify things. Especially since when they are used together, the complexity of two structures is generally much more than the sum of their individual complexities. \nConventions\nWe’ve acknowledged that different people have different views of what readability means. We constantly fight over function names, discuss what should be explicit and what implicit, what idioms should we use, and much more. Programming is an art of expressiveness. Still, there are some conventions that need to be understood and remembered. \nWhen one of my workshop groups in San Francisco asked me about the worst thing one can do in Kotlin, I gave them this:\nval abc = \"A\" { \"B\" } and \"C\"\nprint(abc) // ABC\n\nAll we need to make this terrible syntax possible is the following code:\noperator fun String.invoke(f: ()->String): String = \n    this + f()\n\ninfix fun String.and(s: String) = this + s\n\nThis code violates many rules that we will describe later:\n\nIt violates operator meaning - invoke should not be used this way. A String cannot be invoked.\nThe usage of the ‘lambda as the last argument’ convention here is confusing. It is fine to use it after functions, but we should be very careful when we use it for the invoke operator. \nand is clearly a bad name for this infix method. append or plus would be much better. \nWe already have language features for String concatenation and we should use them instead of reinventing the wheel. \n\nBehind each of these suggestions, there is a more general rule that guards good Kotlin style. We will cover the most important ones in this chapter starting with the first item which will focus on overriding operators.\n"},"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html":{"url":"Part 1 Good code/Chapter 2 Readability/Item 12 Operator meaning should be consistent with its function name.html","title":"Item 12 Operator Meaning Should Be Consistent With Its Function Name","keywords":"","body":""},"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html":{"url":"Part 1 Good code/Chapter 2 Readability/Item 13 Avoid returning or operating on Unit?.html","title":"Item 13 Avoid Returning Or Operating On Unit","keywords":"","body":""},"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html":{"url":"Part 1 Good code/Chapter 2 Readability/Item 14 Specify the variable type when it is not clear.html","title":"Item 14 Specify The Variable Type When It Is Not Clear","keywords":"","body":""},"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html":{"url":"Part 1 Good code/Chapter 2 Readability/Item 15 Consider referencing receivers explicitly.html","title":"Item 15 Consider Referencing Receivers Explicitly","keywords":"","body":""},"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html":{"url":"Part 1 Good code/Chapter 2 Readability/Item 16 Properties should represent state not behavior.html","title":"Item 16 Properties Should Represent State Not Behavior","keywords":"","body":""},"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html":{"url":"Part 1 Good code/Chapter 2 Readability/Item 17 Consider naming arguments.html","title":"Item 17 Consider Naming Arguments","keywords":"","body":""},"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html":{"url":"Part 1 Good code/Chapter 2 Readability/Item 18 Respect coding conventions.html","title":"Item 18 Respect Coding Conventions","keywords":"","body":""},"Part 2 Code design/Chapter 3 Reusability/Introduction.html":{"url":"Part 2 Code design/Chapter 3 Reusability/Introduction.html","title":"Introduction","keywords":"","body":""},"Part 2 Code design/Chapter 3 Reusability/Item 19 Do not repeat knowledge.html":{"url":"Part 2 Code design/Chapter 3 Reusability/Item 19 Do not repeat knowledge.html","title":"Item 19 Do Not Repeat Knowledge","keywords":"","body":""},"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html":{"url":"Part 2 Code design/Chapter 3 Reusability/Item 20 Do not repeat common algorithms.html","title":"Item 20 Do Not Repeat Common Algorithms","keywords":"","body":""},"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html":{"url":"Part 2 Code design/Chapter 3 Reusability/Item 21 Use property delegation to extract common property patterns.html","title":"Item 21 Use Property Delegation To Extract Common Property Patterns","keywords":"","body":""},"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html":{"url":"Part 2 Code design/Chapter 3 Reusability/Item 22 Use generics when implementing common algorithms.html","title":"Item 22 Use Generics When Implementing Common Algorithms","keywords":"","body":""},"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html":{"url":"Part 2 Code design/Chapter 3 Reusability/Item 23 Avoid shadowing type parameters.html","title":"Item 23 Avoid Shadowing Type Parameters","keywords":"","body":""},"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html":{"url":"Part 2 Code design/Chapter 3 Reusability/Item 24 Consider variance for generic types.html","title":"Item 24 Consider Variance For Generic Types","keywords":"","body":""},"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html":{"url":"Part 2 Code design/Chapter 3 Reusability/Item 25 Reuse between different platforms by extracting common modules.html","title":"Item 25 Reuse Between Different Platforms By Extracting Common Modules","keywords":"","body":""},"Part 2 Code design/Chapter 4 Abstraction design/Introduction.html":{"url":"Part 2 Code design/Chapter 4 Abstraction design/Introduction.html","title":"Introduction","keywords":"","body":""},"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html":{"url":"Part 2 Code design/Chapter 4 Abstraction design/Item 26 Each function should be written in terms of a single level of abstraction.html","title":"Item 26 Each Function Should Be Written In Terms Of A Single Level Of Abstraction","keywords":"","body":""},"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html":{"url":"Part 2 Code design/Chapter 4 Abstraction design/Item 27 Use abstraction to protect code against changes.html","title":"Item 27 Use Abstraction To Protect Code Against Changes","keywords":"","body":""},"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html":{"url":"Part 2 Code design/Chapter 4 Abstraction design/Item 28 Specify API stability.html","title":"Item 28 Specify API Stability","keywords":"","body":""},"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html":{"url":"Part 2 Code design/Chapter 4 Abstraction design/Item 29 Consider wrapping external API.html","title":"Item 29 Consider Wrapping External API","keywords":"","body":""},"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html":{"url":"Part 2 Code design/Chapter 4 Abstraction design/Item 30 Minimize elements visibility.html","title":"Item 30 Minimize Elements Visibility","keywords":"","body":""},"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html":{"url":"Part 2 Code design/Chapter 4 Abstraction design/Item 31 Define contract with documentation.html","title":"Item 31 Define Contract With Documentation","keywords":"","body":""},"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html":{"url":"Part 2 Code design/Chapter 4 Abstraction design/Item 32 Respect abstraction contracts.html","title":"Item 32 Respect Abstraction Contracts","keywords":"","body":""},"Part 2 Code design/Chapter 5 Object creation/Introduction.html":{"url":"Part 2 Code design/Chapter 5 Object creation/Introduction.html","title":"Introduction","keywords":"","body":""},"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html":{"url":"Part 2 Code design/Chapter 5 Object creation/Item 33 Consider factory functions instead of constructors.html","title":"Item 33 Consider Factory Functions Instead Of Constructors","keywords":"","body":""},"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html":{"url":"Part 2 Code design/Chapter 5 Object creation/Item 34 Consider a primary constructor with named optional arguments.html","title":"Item 34 Consider A Primary Constructor With Named Optional Arguments","keywords":"","body":""},"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html":{"url":"Part 2 Code design/Chapter 5 Object creation/Item 35 Consider defining a DSL for complex object creation.html","title":"Item 35 Consider Defining A DSL For Complex Object Creation","keywords":"","body":""},"Part 2 Code design/Chapter 6 Class design/Introduction.html":{"url":"Part 2 Code design/Chapter 6 Class design/Introduction.html","title":"Introduction","keywords":"","body":""},"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html":{"url":"Part 2 Code design/Chapter 6 Class design/Item 36 Prefer composition over inheritance.html","title":"Item 36 Prefer Composition Over Inheritance","keywords":"","body":""},"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html":{"url":"Part 2 Code design/Chapter 6 Class design/Item 37 Use the data modifier to represent a bundle of data.html","title":"Item 37 Use The Data Modifier To Represent A Bundle Of Data","keywords":"","body":""},"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html":{"url":"Part 2 Code design/Chapter 6 Class design/Item 38 Use function types instead of interfaces to pass operations and actions.html","title":"Item 38 Use Function Types Instead Of Interfaces To Pass Operations And Actions","keywords":"","body":""},"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html":{"url":"Part 2 Code design/Chapter 6 Class design/Item 39 Prefer class hierarchies to tagged classes.html","title":"Item 39 Prefer Class Hierarchies To Tagged Classes","keywords":"","body":""},"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html":{"url":"Part 2 Code design/Chapter 6 Class design/Item 40 Respect the contract of  equals.html","title":"Item 40 Respect The Contract Of Equals","keywords":"","body":""},"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html":{"url":"Part 2 Code design/Chapter 6 Class design/Item 41 Respect the contract of  hashCode.html","title":"Item 41 Respect The Contract Of Hash Code","keywords":"","body":""},"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html":{"url":"Part 2 Code design/Chapter 6 Class design/Item 42 Respect the contract of compareTo.html","title":"Item 42 Respect The Contract Of Compare To","keywords":"","body":""},"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html":{"url":"Part 2 Code design/Chapter 6 Class design/Item 43 Consider extracting non-essential parts of your API into extensions.html","title":"Item 43 Consider Extracting Non Essential Parts Of Your API Into Extensions","keywords":"","body":""},"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html":{"url":"Part 2 Code design/Chapter 6 Class design/Item 44 Avoid member extensions.html","title":"Item 44 Avoid Member Extensions","keywords":"","body":""},"Part 3 Efficiency/Chapter 7 Make it cheap/Introduction.html":{"url":"Part 3 Efficiency/Chapter 7 Make it cheap/Introduction.html","title":"Introduction","keywords":"","body":""},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html":{"url":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 45 Avoid unnecessary object creation.html","title":"Item 45 Avoid Unnecessary Object Creation","keywords":"","body":""},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html":{"url":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 46 Use inline modifier for functions with parameters of functional types.html","title":"Item 46 Use Inline Modifier For Functions With Parameters Of Functional Types","keywords":"","body":""},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html":{"url":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 47 Consider using inline classes.html","title":"Item 47 Consider Using Inline Classes","keywords":"","body":""},"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html":{"url":"Part 3 Efficiency/Chapter 7 Make it cheap/Item 48 Eliminate obsolete object references.html","title":"Item 48 Eliminate Obsolete Object References","keywords":"","body":""},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Introduction.html":{"url":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Introduction.html","title":"Introduction","keywords":"","body":""},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html":{"url":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 49 Prefer Sequence for big collections with more than one processing step.html","title":"Item 49 Prefer Sequence For Big Collections With More Than One Processing Step","keywords":"","body":""},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html":{"url":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 50 Limit the number of operations.html","title":"Item 50 Limit The Number Of Operations","keywords":"","body":""},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html":{"url":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 51 Consider Arrays with primitives for performance-critical processing.html","title":"Item 51 Consider Arrays With Primitives For Performance Critical Processing","keywords":"","body":""},"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html":{"url":"Part 3 Efficiency/Chapter 8 Efficient collection processing/Item 52 Consider using mutable collections.html","title":"Item 52 Consider Using Mutable Collections","keywords":"","body":""}}}